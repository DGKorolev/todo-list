{"version":3,"sources":["components/Navigation.js","http/axiosWithCredentials.js","services/AuthProvider.js","hooks/createFetch.js","services/auth.js","page/Login.js","page/Registration.js","components/Error.js","components/InputForm.js","components/Filter.js","components/ToDoListItem.js","components/ToDoList.js","services/task.js","page/Tasks.js","components/Routes.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navigation","logged","logout","classes","AppBar","position","Toolbar","className","to","process","Typography","variant","Button","color","onClick","axiosWithCredentials","axios","create","withCredentials","baseURL","tokenProvider","observers","localStorageKey","getExpirationDate","token","JSON","parse","atob","split","exp","getToken","a","localStorage","getItem","Date","now","post","updatedToken","setToken","data","isLoggedIn","setItem","removeItem","notify","isLogged","forEach","observer","subscribe","push","unsubscribe","filter","_observer","createTokenProvider","axiosWithToken","interceptors","request","use","req","headers","Authorization","useAuth","useState","setIsLogged","listener","useCallback","newIsLogged","useEffect","login","newTokens","createAuthProvider","createFetch","callback","setError","message","console","log","Auth","registrationFormData","res","status","Error","loginFormData","Login","redirect","setRedirect","validationSchema","yup","shape","email","required","password","registrationFetch","values","jwtToken","Grid","container","alignItems","justifyContent","style","height","Container","maxWidth","initialValues","confirmPassword","onSubmit","validateOnBlur","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","isSubmitting","direction","component","align","TextField","name","label","type","utocomplete","error","helperText","onChange","onBlur","value","Box","mt","disabled","Registration","oneOf","registration","display","textAlign","background","palette","light","borderRadius","padding","children","time","setTimeout","p","inputForm","join","marginTop","width","InputForm","createTaskFetch","setName","keyDownInputHandler","e","code","trim","Input","placeholder","target","onKeyDown","ASC","DESC","Filter","setFilter","handlerFilterButton","filterType","state","handlerSortButton","ascending","sortDirection","IconButton","listItem","border","grey","transition","completed","borderColor","success","main","hiddenInput","ToDoListItem","task","editTaskFetch","deleteTaskFetch","dragAndDrop","changePosition","setHiddenInput","clickDeleteHandler","stopPropagation","id","ListItem","done","onDragStart","dragStartHandler","onDragLeave","dragLeaveHandler","onDragOver","dragOverHandler","onDragEnd","dragEndHandler","onDrop","onDropHandler","draggable","size","autoFocus","defaultValue","createdAt","substr","ToDoList","displayedTasks","tasks","currentTask","setCurrentTask","getDragAndDrop","transform","preventDefault","reduce","taskItem","menu_position","newMenuPosition","Math","ceil","List","length","map","Task","filterBy","order","params","get","taskName","taskId","editData","patch","delete","Tasks","setTasks","page","limit","paginate","setPaginate","fetchTasks","useMemo","getAll","response","paginateState","edit","slice","Pagination","count","MyComponent","isAuth","path","App","basename","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f24889e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {AppBar, Button, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst Navigation = ({logged, logout}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n                <div className={classes.title}>\r\n                    {logged && (\r\n\r\n                        <Link to={`${process.env.REACT_APP_PATH_GH_PAGE}/`}>\r\n                            <Typography variant=\"h6\">\r\n                                Tasks\r\n                            </Typography>\r\n                        </Link>\r\n\r\n                    )}\r\n                </div>\r\n\r\n                <div>\r\n                    {!logged ? (<>\r\n                            <Link to={`${process.env.REACT_APP_PATH_GH_PAGE}/login`}>\r\n                                <Button color=\"inherit\">Login</Button>\r\n                            </Link>\r\n                            <Link to={`${process.env.REACT_APP_PATH_GH_PAGE}/registration`}>\r\n                                <Button color=\"inherit\">Registration</Button>\r\n                            </Link>\r\n                        </>)\r\n                        : (<Button\r\n                            color=\"inherit\"\r\n                            onClick={logout}\r\n                        >\r\n                            Logout\r\n                        </Button>)\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import axios from \"axios\";\r\n\r\nconst axiosWithCredentials = axios.create({\r\n    withCredentials: true,\r\n    baseURL: process.env.REACT_APP_API_ADDRESS\r\n})\r\n\r\nexport default axiosWithCredentials","import {useCallback, useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport axiosWithCredentials from \"../http/axiosWithCredentials\";\r\nconst createTokenProvider = () => {\r\n\r\n    let  observers = [];\r\n\r\n\r\n    const localStorageKey = 'jwtToken'\r\n\r\n    const getExpirationDate = (token) => {\r\n        if (!token) {\r\n            return null;\r\n        }\r\n\r\n        const jwt = JSON.parse(atob(token.split('.')[1]));\r\n        return jwt.exp * 1000 || null;\r\n    };\r\n\r\n\r\n    const isExpired = (exp) => {\r\n        if (!exp) {\r\n            return false;\r\n        }\r\n\r\n        return Date.now() > exp;\r\n    };\r\n\r\n    const getToken = async () => {\r\n\r\n        const token = localStorage.getItem('jwtToken')\r\n\r\n        if (isExpired(getExpirationDate(token))) {\r\n            const updatedToken = await axiosWithCredentials.post('/refresh-token')\r\n            setToken(updatedToken.data[localStorageKey]);\r\n        }\r\n\r\n        return localStorage.getItem('jwtToken')\r\n    };\r\n\r\n    const isLoggedIn = () => {\r\n        return !!localStorage.getItem('jwtToken');\r\n    };\r\n\r\n    const setToken = (token) => {\r\n\r\n        if (token) {\r\n            localStorage.setItem(localStorageKey, token);\r\n        } else {\r\n            localStorage.removeItem(localStorageKey);\r\n        }\r\n\r\n        notify();\r\n    };\r\n\r\n    const notify = () => {\r\n        const isLogged = isLoggedIn();\r\n        observers.forEach(observer => observer(isLogged));\r\n    };\r\n\r\n    const subscribe = (observer) => {\r\n        observers.push(observer);\r\n    };\r\n\r\n    const unsubscribe = (observer) => {\r\n        observers = observers.filter(_observer => _observer !== observer);\r\n    };\r\n\r\n    return {\r\n        getToken,\r\n        isLoggedIn,\r\n        setToken,\r\n        subscribe,\r\n        unsubscribe,\r\n    };\r\n}\r\n\r\n\r\nexport const createAuthProvider = () => {\r\n\r\n\r\n\r\n    const tokenProvider = createTokenProvider()\r\n\r\n    let axiosWithToken = axios.create({\r\n        baseURL: process.env.REACT_APP_API_ADDRESS\r\n    })\r\n\r\n    axiosWithToken.interceptors.request.use(async req => {\r\n\r\n        req.headers.Authorization = `Bearer ${await tokenProvider.getToken()}`;\r\n\r\n        return req;\r\n    })\r\n\r\n    const login = (newTokens) => {\r\n        tokenProvider.setToken(newTokens);\r\n    };\r\n\r\n    const logout = async () => {\r\n        await axiosWithCredentials.post('/logout')\r\n        tokenProvider.setToken(null);\r\n    };\r\n\r\n    // const authFetch = async (input, init) => {\r\n    //\r\n    //     const token = await tokenProvider.getToken();\r\n    //\r\n    //     init = init || {};\r\n    //\r\n    //     init.headers = {\r\n    //         ...init.headers,\r\n    //         Authorization: `Bearer ${token}`,\r\n    //     };\r\n    //\r\n    //     return fetch(input, init);\r\n    // };\r\n\r\n    const useAuth = () => {\r\n\r\n        const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\r\n\r\n        const listener = useCallback(\r\n            (newIsLogged) => {\r\n                setIsLogged(newIsLogged);\r\n            },\r\n            [setIsLogged],\r\n        );\r\n\r\n        useEffect(() => {\r\n\r\n            tokenProvider.subscribe(listener);\r\n\r\n            return () => {\r\n                tokenProvider.unsubscribe(listener);\r\n            };\r\n\r\n        }, [listener]);\r\n\r\n        return isLogged;\r\n    };\r\n\r\n    return {useAuth, axiosWithToken, login, logout}\r\n};\r\n\r\nconst {useAuth, axiosWithToken, login, logout} = createAuthProvider();\r\n\r\nexport {useAuth};\r\nexport {login};\r\nexport {axiosWithToken};\r\nexport {logout};\r\n","export const createFetch = (callback, setError = null) => {\r\n\r\n    return async (...ars) => {\r\n\r\n        try {\r\n\r\n            return await callback(...ars)\r\n\r\n        }catch (e){\r\n            if (setError) setError(e.message)\r\n            console.log(e.message)\r\n        }\r\n\r\n    }\r\n\r\n}","import axiosWithCredentials from \"../http/axiosWithCredentials\";\r\n\r\nexport default class Auth {\r\n\r\n    static async registration(registrationFormData) {\r\n\r\n        const res = await axiosWithCredentials.post('/registration', registrationFormData)\r\n\r\n        if (res.status !== 200) throw Error('Failed to get the task list')\r\n\r\n        return res.data\r\n\r\n    }\r\n\r\n    static async login(loginFormData) {\r\n\r\n        const res = await axiosWithCredentials.post('/login', loginFormData)\r\n\r\n        if (res.status !== 200) throw Error('Failed to get the task list')\r\n\r\n        return res.data\r\n\r\n    }\r\n\r\n}","import React, {useState} from 'react';\r\nimport {Container, Grid, Typography, TextField, Button, Box} from '@material-ui/core';\r\nimport {createFetch} from \"../hooks/createFetch\";\r\nimport Auth from \"../services/auth\";\r\nimport * as yup from \"yup\";\r\nimport {Formik} from \"formik\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = ({login, ...props}) => {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string().required().email(),\r\n        password: yup.string().required(),\r\n    })\r\n\r\n\r\n    const registrationFetch = createFetch(async (values) => {\r\n\r\n        const res = await Auth.login(values)\r\n\r\n        if (!res.jwtToken) return\r\n\r\n        setRedirect(true)\r\n        login(res.jwtToken)\r\n    })\r\n\r\n    if (redirect) {\r\n        return (<Redirect to={`${process.env.REACT_APP_PATH_GH_PAGE}/`}/>)\r\n    }\r\n\r\n    return (\r\n        <Grid container alignItems='center' justifyContent='center' style={{height: '100vh'}}>\r\n            <Container maxWidth='sm'>\r\n\r\n                <Formik\r\n                    initialValues={{\r\n                        email: '',\r\n                        password: '',\r\n                        confirmPassword: ''\r\n                    }}\r\n                    onSubmit={(values) => {\r\n                        registrationFetch(values)\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    validateOnBlur\r\n                >\r\n                    {(\r\n                        {\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            isValid,\r\n                            handleSubmit,\r\n                            dirty,\r\n                            isSubmitting\r\n                        }) => (\r\n                        <>\r\n                            <form>\r\n                                <Grid container direction='column' className='formContainer'>\r\n                                    <Typography variant=\"h4\" component=\"h4\" align='center'>Login</Typography>\r\n                                    <TextField\r\n                                        name='email'\r\n                                        label='Login'\r\n                                        type='text'\r\n                                        utocomplete=\"username email\"\r\n                                        error={!!(touched.email && errors.email)}\r\n                                        helperText={touched.email && errors.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                    />\r\n                                    <TextField\r\n                                        name='password'\r\n                                        label='Password'\r\n                                        type='text'\r\n                                        utocomplete=\"password\"\r\n                                        error={!!(touched.password && errors.password)}\r\n                                        helperText={touched.password && errors.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password}\r\n                                    />\r\n                                </Grid>\r\n                                <Box mt={3}>\r\n                                    <Button\r\n                                        disabled={!dirty || !isValid || isSubmitting}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        type='submit'\r\n                                        onClick={handleSubmit}\r\n                                    >\r\n                                        Login\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        </>\r\n                    )}\r\n                </Formik>\r\n            </Container>\r\n        </Grid>\r\n\r\n    );\r\n};\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport {Box, Button, Container, Grid, TextField, Typography} from \"@material-ui/core\";\r\nimport Auth from '../services/auth'\r\nimport {createFetch} from \"../hooks/createFetch\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Registration = ({login}) => {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string().required().email(),\r\n        password: yup.string().required(),\r\n        confirmPassword: yup.string().required().oneOf([yup.ref('password')], 'Password mismatch'),\r\n    })\r\n\r\n\r\n    const registrationFetch = createFetch(async (values) => {\r\n\r\n        const res = await Auth.registration(values)\r\n\r\n        if (!res.jwtToken) return\r\n\r\n        setRedirect(true)\r\n        login(res.jwtToken)\r\n\r\n    })\r\n\r\n    if (redirect) {\r\n        return (<Redirect to={`${process.env.REACT_APP_PATH_GH_PAGE}/`}/>)\r\n    }\r\n\r\n    return (\r\n        <Grid container alignItems='center' justifyContent='center' style={{height: '100vh'}}>\r\n            <Container maxWidth='sm'>\r\n\r\n                <Formik\r\n                    initialValues={{\r\n                        email: '',\r\n                        password: '',\r\n                        confirmPassword: ''\r\n                    }}\r\n                    onSubmit={(values) => {\r\n                        delete values.confirmPassword\r\n                        registrationFetch(values)\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    validateOnBlur\r\n                >\r\n                    {(\r\n                        {\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            isValid,\r\n                            handleSubmit,\r\n                            dirty,\r\n                            isSubmitting\r\n                        }) => (\r\n                        <>\r\n                            <form>\r\n                                <Grid container direction='column' className='formContainer'>\r\n                                    <Typography variant=\"h4\" component=\"h4\" align='center'>Registration</Typography>\r\n                                    <TextField\r\n                                        name='email'\r\n                                        label='Login'\r\n                                        type='text'\r\n                                        utocomplete=\"username email\"\r\n                                        error={!!(touched.email && errors.email)}\r\n                                        helperText={touched.email && errors.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                    />\r\n                                    <TextField\r\n                                        name='password'\r\n                                        label='Password'\r\n                                        type='text'\r\n                                        utocomplete=\"password\"\r\n                                        error={!!(touched.password && errors.password)}\r\n                                        helperText={touched.password && errors.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password}\r\n                                    />\r\n                                    <TextField\r\n                                        name='confirmPassword'\r\n                                        label='Confirm password'\r\n                                        type='text'\r\n                                        utocomplete=\"password\"\r\n                                        error={!!(touched.confirmPassword && errors.confirmPassword)}\r\n                                        helperText={touched.confirmPassword && errors.confirmPassword}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.confirmPassword}\r\n                                    />\r\n                                </Grid>\r\n                                <Box mt={3}>\r\n                                    <Button\r\n                                        disabled={!dirty || !isValid}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        type='submit'\r\n                                        onClick={handleSubmit}\r\n                                    >\r\n                                        Registration\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        </>\r\n                    )}\r\n                </Formik>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Registration;","import React, {useEffect} from 'react';\r\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    error: {\r\n        display: 'block',\r\n        textAlign: \"center\",\r\n        background: theme.palette.error.light,\r\n        borderRadius: '5px',\r\n        padding: '8px 24px',\r\n    }\r\n}))\r\n\r\nconst Error = ({children, setError, time}) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => {\r\n            setError('')\r\n        }, time)\r\n\r\n    }, )\r\n\r\n    return (\r\n        <Box p={1}>\r\n            <Typography component={'span'} className={classes.error}>{children}</Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Error;","import React, {useState} from 'react';\r\nimport {Input, makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputForm: {\r\n        padding: [theme.spacing(1), theme.spacing(1)].join(' '),\r\n        marginTop: theme.spacing(2),\r\n        width: '100%'\r\n    }\r\n}))\r\n\r\n\r\nconst InputForm = ({createTaskFetch}) => {\r\n\r\n    const classes = useStyles()\r\n    const [name, setName] = useState('')\r\n\r\n    const keyDownInputHandler = async (e) => {\r\n        if(e.code === \"Enter\" && name.trim()) {\r\n            await createTaskFetch(name)\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    const changeInputHandler = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Input\r\n                // className={classes.input_form}\r\n                className={classes.inputForm}\r\n                type=\"text\"\r\n                placeholder=\"i want to ...\"\r\n                value={name}\r\n                onChange={changeInputHandler}\r\n                onKeyDown={keyDownInputHandler}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputForm;","import React from 'react';\r\nimport {Box, Button, Grid, IconButton, Typography} from \"@material-ui/core\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nexport const DONE = 'done'\r\nexport const UNDONE = 'undone'\r\n\r\nexport const ASC = 'asc'\r\nexport const DESC = 'desc'\r\n\r\nconst Filter = ({setFilter}) => {\r\n\r\n    const handlerFilterButton = (filterType) => {\r\n        return () => setFilter(state => ({...state, filterType}))\r\n    }\r\n\r\n    const handlerSortButton = (ascending) => {\r\n        return () => setFilter(state => ({...state, sortDirection: ascending}))\r\n    }\r\n\r\n    return (\r\n        <Box mt={2}>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" >\r\n                <Box>\r\n                    <Button onClick={handlerFilterButton('')}>\r\n                        All\r\n                    </Button>\r\n                    <Button onClick={handlerFilterButton(DONE)}>\r\n                        Done\r\n                    </Button>\r\n                    <Button onClick={handlerFilterButton(UNDONE)}>\r\n                        Undone\r\n                    </Button>\r\n                </Box>\r\n                <Box>\r\n                    <Typography display=\"inline\">Sort by Date</Typography>\r\n                    <IconButton\r\n                        onClick={handlerSortButton(DESC)}\r\n                    >\r\n                        <ArrowUpwardIcon/>\r\n                    </IconButton>\r\n                    <IconButton\r\n                        onClick={handlerSortButton(ASC)}\r\n                    >\r\n                        <ArrowDownwardIcon/>\r\n                    </IconButton>\r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React, {useState} from 'react';\r\nimport {Box, Grid, IconButton, Input, ListItem, makeStyles, Typography} from \"@material-ui/core\";\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    listItem: {\r\n        borderRadius: '5px',\r\n        border: '1px solid' + theme.palette.grey[\"400\"],\r\n        marginTop: theme.spacing(1),\r\n        transition: 'all .4s',\r\n    },\r\n    completed: {\r\n        background: '#eaffe9',\r\n        borderColor: theme.palette.success.main\r\n    },\r\n    hiddenInput: {\r\n        width: \"100px\",\r\n    }\r\n\r\n}))\r\n\r\nconst ToDoListItem = ({task, editTaskFetch, deleteTaskFetch, changePosition, dragAndDrop}) => {\r\n\r\n    let classes = useStyles()\r\n\r\n    const [hiddenInput, setHiddenInput] = useState(true)\r\n\r\n\r\n    const clickDeleteHandler = async (e) => {\r\n        e.stopPropagation()\r\n        deleteTaskFetch(task.id)\r\n    }\r\n\r\n    const inputKeyDownHandler = (e) => {\r\n\r\n        if (e.code === \"Enter\") {\r\n            editTaskFetch(task.id, {name: e.target.value})\r\n            setHiddenInput(true)\r\n        }\r\n\r\n        if (e.code === \"Escape\") {\r\n            setHiddenInput(true)\r\n        }\r\n\r\n    }\r\n\r\n    const clickConfirmHandler = (e) => {\r\n        e.stopPropagation()\r\n        editTaskFetch(task.id, {done: true})\r\n    }\r\n\r\n    const clickTaskHandler = (e) => {\r\n        e.stopPropagation()\r\n        setHiddenInput(false)\r\n    }\r\n\r\n    return (\r\n        <ListItem\r\n            className={task.done ? [classes.listItem, classes.completed].join(' ') : classes.listItem}\r\n            onClick={clickTaskHandler}\r\n            onDragStart={dragAndDrop.dragStartHandler}\r\n            onDragLeave={dragAndDrop.dragLeaveHandler}\r\n            onDragOver={dragAndDrop.dragOverHandler}\r\n            onDragEnd={dragAndDrop.dragEndHandler}\r\n            onDrop={dragAndDrop.onDropHandler}\r\n            draggable\r\n        >\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Box>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        onClick={clickConfirmHandler}\r\n                        className=\"icon-button\"\r\n                    >\r\n                        <CheckCircleOutlineIcon/>\r\n                    </IconButton>\r\n                    {hiddenInput\r\n                        ? <Typography component=\"span\">{task.name}</Typography>\r\n                        : <Input\r\n                            autoFocus\r\n                            onBlur={() => setHiddenInput(true)}\r\n                            onKeyDown={inputKeyDownHandler}\r\n                            defaultValue={task.name}\r\n                        />\r\n                    }\r\n                </Box>\r\n\r\n                <Box>\r\n                    <Typography component=\"span\">{task.createdAt.substr(0, 10)}</Typography>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        onClick={clickDeleteHandler}\r\n                        className=\"icon-button\"\r\n                    >\r\n                        <DeleteForeverIcon/>\r\n                    </IconButton>\r\n                </Box>\r\n            </Grid>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default ToDoListItem;","import React, {useState} from 'react';\r\nimport ToDoListItem from \"./ToDoListItem\";\r\nimport {List} from \"@material-ui/core\";\r\n\r\nconst ToDoList = ({displayedTasks, editTaskFetch, deleteTaskFetch, changePosition, tasks, filter}) => {\r\n\r\n    const [currentTask, setCurrentTask] = useState({})\r\n\r\n    const getDragAndDrop = (task) => ({\r\n\r\n        dragStartHandler: (e) => {\r\n            setCurrentTask(task)\r\n        },\r\n\r\n        dragLeaveHandler: (e) => {\r\n            e.target.style.transform = '';\r\n        },\r\n\r\n        dragOverHandler: (e) => {\r\n            e.preventDefault()\r\n            e.target.style.transform = 'scale(1.03)';\r\n        },\r\n\r\n        onDropHandler: (e) => {\r\n            e.preventDefault()\r\n\r\n            const res = tasks.reduce((res, taskItem) => {\r\n\r\n                if (currentTask.menu_position > task.menu_position) {\r\n                    return taskItem.menu_position > task.menu_position && taskItem.menu_position < res ? taskItem.menu_position : res\r\n                }\r\n\r\n                return taskItem.menu_position < task.menu_position && taskItem.menu_position > res ? taskItem.menu_position : res\r\n\r\n            }, currentTask.menu_position)\r\n\r\n\r\n            const newMenuPosition = task.menu_position - Math.ceil((res - task.menu_position) / 2)\r\n\r\n\r\n            editTaskFetch(currentTask.id, {\r\n                menu_position: newMenuPosition\r\n            })\r\n\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <List>\r\n            {displayedTasks.length > 0 && displayedTasks.map(task =>\r\n                <ToDoListItem\r\n                    key={task.id}\r\n                    task={task}\r\n                    editTaskFetch={editTaskFetch}\r\n                    deleteTaskFetch={deleteTaskFetch}\r\n                    changePosition={changePosition}\r\n                    dragAndDrop={getDragAndDrop(task)}\r\n                />\r\n            )}\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import {ASC} from \"../components/Filter\";\r\nimport {axiosWithToken} from \"./AuthProvider\";\r\n\r\nexport default class Task {\r\n\r\n    static async getAll(filterBy = '', order = ASC) {\r\n\r\n\r\n        const params = {\r\n            order,\r\n        }\r\n\r\n        if (filterBy) params.filterBy = filterBy\r\n\r\n        const res = await axiosWithToken.get('/tasks', {params})\r\n\r\n        if (res.status !== 200) throw Error('Failed to get the task list')\r\n\r\n        return res.data\r\n\r\n    }\r\n\r\n    static async create(taskName) {\r\n\r\n        const res = await axiosWithToken.post('/task', {\r\n            name: taskName,\r\n            done: false\r\n        })\r\n\r\n        if (res.status !== 200) throw Error('Task not created')\r\n\r\n        return res.data\r\n    }\r\n\r\n    static async edit(taskId, editData) {\r\n\r\n        const res = await axiosWithToken.patch(`/task/${taskId}`, editData)\r\n\r\n        if (res.status !== 200) throw Error('Data change error')\r\n\r\n        return res.data\r\n    }\r\n\r\n    static async delete(taskId) {\r\n\r\n        const res = await axiosWithToken.delete(`/task/${taskId}`)\r\n\r\n        if (res.status !== 204) throw Error('Data deletion error')\r\n\r\n        return res.data\r\n\r\n    }\r\n\r\n}","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {Container, Grid, Typography} from \"@material-ui/core\";\r\nimport Error from \"../components/Error\";\r\nimport InputForm from \"../components/InputForm\";\r\nimport Filter, {DESC} from \"../components/Filter\";\r\nimport ToDoList from \"../components/ToDoList\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {createFetch} from \"../hooks/createFetch\";\r\nimport Task from \"../services/task\";\r\n\r\nconst Tasks = () => {\r\n\r\n    const [error, setError] = useState('')\r\n\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    const [filter, setFilter] = useState({\r\n        sortDirection: DESC,\r\n        filterType: '',\r\n    })\r\n\r\n    const [paginate, setPaginate] = useState({\r\n        page: 1,\r\n        limit: 5\r\n    })\r\n\r\n\r\n    const fetchTasks = useMemo(() => {\r\n        return createFetch(async () => {\r\n            const response = await Task.getAll(filter.filterType, filter.sortDirection)\r\n            setTasks(response)\r\n        }, setError)\r\n    }, [filter])\r\n\r\n\r\n    const createTaskFetch = createFetch(async (name) => {\r\n        await Task.create(name)\r\n        setPaginate(paginateState => ({...paginateState, page: 1}))\r\n\r\n        setFilter({\r\n            sortDirection: DESC,\r\n            filterType: ''\r\n        })\r\n\r\n    }, setError)\r\n\r\n    const editTaskFetch = createFetch(async (id, editData) => {\r\n        await Task.edit(id, editData)\r\n        fetchTasks()\r\n    }, setError)\r\n\r\n    const deleteTaskFetch = createFetch(async (id) => {\r\n        await Task.delete(id)\r\n        fetchTasks()\r\n    }, setError)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTasks()\r\n    }, [fetchTasks]);\r\n\r\n\r\n    useEffect(() => {\r\n        setPaginate(state => ({...state, page: 1}))\r\n    }, [filter])\r\n\r\n    const displayedTasks = useMemo(() => {\r\n        return tasks.slice((paginate.page - 1) * paginate.limit, (paginate.page - 1) * paginate.limit + paginate.limit)\r\n    }, [tasks, paginate])\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" className='gridContainer' style={{height: '100vh'}}>\r\n            <Container maxWidth=\"sm\">\r\n                <Grid container direction=\"column\">\r\n\r\n                    {error &&\r\n                    <Error time={2000} setError={setError}>{error}</Error>\r\n                    }\r\n                    <Typography variant=\"h4\" component=\"h1\" align=\"center\">ToDo</Typography>\r\n                    <InputForm setTasks={setTasks} createTaskFetch={createTaskFetch}/>\r\n                    <Filter setFilter={setFilter}/>\r\n                    <ToDoList\r\n                        displayedTasks={displayedTasks}\r\n                        deleteTaskFetch={deleteTaskFetch}\r\n                        editTaskFetch={editTaskFetch}\r\n                        tasks={tasks}\r\n                        filter={filter}\r\n                    />\r\n                    <Pagination\r\n                        count={Math.ceil(tasks.length / paginate.limit)}\r\n                        onChange={(e, page) => setPaginate(state => ({...state, page}))}\r\n                        page={paginate.page}\r\n                        className='todo-pagination'\r\n                    />\r\n                </Grid>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Tasks;","import React from 'react';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport Login from \"../page/Login\";\r\nimport {login} from \"../services/AuthProvider\";\r\nimport Registration from \"../page/Registration\";\r\nimport Tasks from \"../page/Tasks\";\r\n\r\nconst MyComponent = ({isAuth}) => {\r\n\r\n    return (\r\n\r\n        <switch>\r\n\r\n            {isAuth\r\n                ? (\r\n                    <>\r\n                        <Route path=\"/\">\r\n                            <Tasks/>\r\n                        </Route>\r\n                        <Redirect to=\"/\" />\r\n                    </>\r\n                )\r\n                : (\r\n                    <>\r\n                        <Route path=\"/login\">\r\n                            <Login login={login}/>\r\n                        </Route>\r\n                        <Route path=\"/registration\">\r\n                            <Registration login={login}/>\r\n                        </Route>\r\n                        <Redirect to=\"/login\" />\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </switch>\r\n\r\n    )\r\n};\r\n\r\nexport default MyComponent;\r\n","import './App.css';\r\nimport React from \"react\";\r\nimport {\r\n    HashRouter,\r\n    BrowserRouter,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport {useAuth, logout} from './services/AuthProvider'\r\nimport Routes from \"./components/Routes\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const logged = useAuth();\r\n\r\n    return (\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <Navigation logged={logged} logout={logout}/>\r\n            <Routes/>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
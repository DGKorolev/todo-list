{"version":3,"sources":["components/Filter.js","components/InputForm.js","components/ToDoListItem.js","components/ToDoList.js","services/task.js","components/Error.js","hooks/createFetch.js","App.js","index.js"],"names":["ASC","DESC","Filter","setFilter","handlerFilterButton","filterType","state","handlerSortButton","ascending","sortDirection","Box","mt","Grid","container","justifyContent","alignItems","Button","onClick","Typography","display","IconButton","useStyles","makeStyles","theme","inputForm","padding","spacing","join","marginTop","width","InputForm","createTaskFetch","classes","useState","name","setName","keyDownInputHandler","e","a","code","trim","Input","className","type","placeholder","value","onChange","target","onKeyDown","listItem","borderRadius","border","palette","grey","completed","background","transition","borderColor","success","main","hiddenInput","ToDoListItem","task","editTaskFetch","deleteTaskFetch","setHiddenInput","clickDeleteHandler","stopPropagation","uuid","ListItem","done","size","component","autoFocus","onBlur","defaultValue","createdAt","substr","ToDoList","displayedTasks","List","map","Task","filterBy","order","params","axios","get","res","status","Error","data","taskName","post","taskId","editData","patch","delete","error","textAlign","light","children","setError","time","useEffect","setTimeout","p","createFetch","callback","message","defaults","baseURL","process","App","tasks","setTasks","filter","page","limit","paginate","setPaginate","fetchTasks","useMemo","getAll","response","create","paginateState","id","edit","slice","Container","maxWidth","direction","variant","align","Pagination","count","Math","ceil","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccfbfa45.chunk.js","sourcesContent":["import React from 'react';\nimport {Box, Button, Grid, IconButton, Typography} from \"@material-ui/core\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport const DONE = 'done'\nexport const UNDONE = 'undone'\n\nexport const ASC = 'asc'\nexport const DESC = 'desc'\n\nconst Filter = ({setFilter}) => {\n\n    const handlerFilterButton = (filterType) => {\n        return () => setFilter(state => ({...state, filterType}))\n    }\n\n    const handlerSortButton = (ascending) => {\n        return () => setFilter(state => ({...state, sortDirection: ascending}))\n    }\n\n    return (\n        <Box mt={2}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" >\n                <Box>\n                    <Button onClick={handlerFilterButton('')}>\n                        All\n                    </Button>\n                    <Button onClick={handlerFilterButton(DONE)}>\n                        Done\n                    </Button>\n                    <Button onClick={handlerFilterButton(UNDONE)}>\n                        Undone\n                    </Button>\n                </Box>\n                <Box>\n                    <Typography display=\"inline\">Sort by Date</Typography>\n                    <IconButton\n                        onClick={handlerSortButton(DESC)}\n                    >\n                        <ArrowUpwardIcon/>\n                    </IconButton>\n                    <IconButton\n                        onClick={handlerSortButton(ASC)}\n                    >\n                        <ArrowDownwardIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Filter;","import React, {useState} from 'react';\nimport {Input, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    inputForm: {\n        padding: [theme.spacing(1), theme.spacing(1)].join(' '),\n        marginTop: theme.spacing(2),\n        width: '100%'\n    }\n}))\n\n\nconst InputForm = ({createTaskFetch}) => {\n\n    const classes = useStyles()\n    const [name, setName] = useState('')\n\n    const keyDownInputHandler = async (e) => {\n        if(e.code === \"Enter\" && name.trim()) {\n            await createTaskFetch(name)\n            setName('')\n        }\n    }\n\n    const changeInputHandler = (e) => {\n        setName(e.target.value)\n    }\n\n    return (\n        <>\n            <Input\n                // className={classes.input_form}\n                className={classes.inputForm}\n                type=\"text\"\n                placeholder=\"i want to ...\"\n                value={name}\n                onChange={changeInputHandler}\n                onKeyDown={keyDownInputHandler}\n            />\n\n        </>\n    );\n};\n\nexport default InputForm;","import React, {useState} from 'react';\nimport {Box, Grid, IconButton, Input, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n\n    listItem: {\n        borderRadius: '5px',\n        border: '1px solid' + theme.palette.grey[\"400\"],\n        marginTop: theme.spacing(1)\n    },\n    completed: {\n        background: '#eaffe9',\n        transition: 'all .4s',\n        borderColor: theme.palette.success.main\n    },\n    hiddenInput: {\n        width: \"100px\",\n    }\n\n}))\n\nconst ToDoListItem = ({task, editTaskFetch, deleteTaskFetch}) => {\n\n    let classes = useStyles()\n\n    const [hiddenInput, setHiddenInput] = useState(true)\n\n\n    const clickDeleteHandler = async (e) => {\n        e.stopPropagation()\n        deleteTaskFetch(task.uuid)\n    }\n\n    const inputKeyDownHandler = (e) => {\n\n        if (e.code === \"Enter\") {\n            editTaskFetch(task.uuid, {name: e.target.value})\n            setHiddenInput(true)\n        }\n\n        if (e.code === \"Escape\") {\n            setHiddenInput(true)\n        }\n\n    }\n\n    const clickConfirmHandler = (e) => {\n        e.stopPropagation()\n        editTaskFetch(task.uuid, {done: true})\n    }\n\n    const clickTaskHandler = (e) => {\n        e.stopPropagation()\n        setHiddenInput(false)\n    }\n\n\n    return (\n        <ListItem\n            className={task.done ? [classes.listItem, classes.completed].join(' ') : classes.listItem}\n            onClick={clickTaskHandler}\n        >\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Box>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickConfirmHandler}\n                        className=\"icon-button\"\n                    >\n                        <CheckCircleOutlineIcon/>\n                    </IconButton>\n                    {hiddenInput\n                        ? <Typography component=\"span\">{task.name}</Typography>\n                        : <Input\n                            autoFocus\n                            onBlur={() => setHiddenInput(true)}\n                            onKeyDown={inputKeyDownHandler}\n                            defaultValue={task.name}\n                        />\n                    }\n                </Box>\n\n                <Box>\n                    <Typography component=\"span\">{task.createdAt.substr(0, 10)}</Typography>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickDeleteHandler}\n                        className=\"icon-button\"\n                    >\n                        <DeleteForeverIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </ListItem>\n    );\n};\n\nexport default ToDoListItem;","import React from 'react';\nimport ToDoListItem from \"./ToDoListItem\";\nimport {List} from \"@material-ui/core\";\n\nconst ToDoList = ({displayedTasks, editTaskFetch, deleteTaskFetch}) => {\n\n    return (\n        <List>\n            {displayedTasks.map(task =>\n                <ToDoListItem key={task.uuid} task={task} editTaskFetch={editTaskFetch} deleteTaskFetch={deleteTaskFetch}/>\n            )}\n        </List>\n    );\n};\n\nexport default ToDoList;","import axios from 'axios'\nimport {ASC} from \"../components/Filter\";\n\nexport default class Task {\n\n    static async getAll(filterBy = '', order = ASC) {\n\n        const params = {\n            order,\n        }\n\n        if (filterBy) params.filterBy = filterBy\n\n        const res = await axios.get('/tasks/2', {params})\n\n        if (res.status !== 200) throw Error('Failed to get the task list')\n\n        return res.data\n\n    }\n\n    static async create(taskName) {\n\n        const res = await axios.post('/task/2', {\n            name: taskName,\n            done: false\n        })\n\n        if (res.status !== 200) throw Error('Task not created')\n\n        return res.data\n    }\n\n    static async edit(taskId, editData) {\n\n        const res = await axios.patch(`/task/2/${taskId}`, editData)\n\n        if (res.status !== 200) throw Error('Data change error')\n\n        return res.data\n    }\n\n    static async delete(taskId) {\n\n        const res = await axios.delete(`/task/2/${taskId}`)\n\n        if (res.status !== 204) throw Error('Data deletion error')\n\n        return res.data\n\n    }\n\n}","import React, {useEffect} from 'react';\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        display: 'block',\n        textAlign: \"center\",\n        background: theme.palette.error.light,\n        borderRadius: '5px',\n        padding: '8px 24px',\n    }\n}))\n\nconst Error = ({children, setError, time}) => {\n\n    const classes = useStyles()\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setError('')\n        }, time)\n\n    }, )\n\n    return (\n        <Box p={1}>\n            <Typography component={'span'} className={classes.error}>{children}</Typography>\n        </Box>\n    );\n};\n\nexport default Error;","export const createFetch = (callback, setError) => {\n\n    return async (...ars) => {\n\n        try {\n\n            return await callback(...ars)\n\n        }catch (e){\n            setError(e.message)\n        }\n\n    }\n\n}","import './App.css';\nimport Filter, {DESC} from \"./components/Filter\";\nimport InputForm from \"./components/InputForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {Container, Grid, Typography} from '@material-ui/core'\nimport Pagination from '@material-ui/lab/Pagination';\nimport Task from \"./services/task\";\nimport Error from \"./components/Error\";\nimport {createFetch} from \"./hooks/createFetch\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_ADDRESS;\n\nfunction App() {\n\n\n    const [error, setError] = useState('')\n\n    const [tasks, setTasks] = useState([])\n\n    const [filter, setFilter] = useState({\n        sortDirection: DESC,\n        filterType: '',\n    })\n\n    const [paginate, setPaginate] = useState({\n        page: 1,\n        limit: 5\n    })\n\n\n    const fetchTasks = useMemo(() => {\n        return createFetch(async () => {\n            const response = await Task.getAll(filter.filterType, filter.sortDirection)\n            setTasks(response)\n        })\n    }, [filter])\n\n\n    const createTaskFetch = createFetch(async (name) => {\n        await Task.create(name)\n        setPaginate(paginateState => ({...paginateState, page: 1}))\n\n        setFilter({\n            sortDirection: DESC,\n            filterType: ''\n        })\n\n    }, setError)\n\n    const editTaskFetch = createFetch(async (id, editData) => {\n        await Task.edit(id, editData)\n        fetchTasks()\n    }, setError)\n\n    const deleteTaskFetch = createFetch(async (id) => {\n        await Task.delete(id)\n        fetchTasks()\n    }, setError)\n\n\n    useEffect(() => {\n        fetchTasks()\n    }, [fetchTasks]);\n\n\n    useEffect(() => {\n        setPaginate(state => ({...state, page: 1}))\n    }, [filter])\n\n    const displayedTasks = useMemo(() => {\n        return tasks.slice((paginate.page - 1) * paginate.limit, (paginate.page - 1) * paginate.limit + paginate.limit)\n    }, [tasks, paginate])\n\n\n    return (\n        <div className=\"App\">\n            <Grid container alignItems=\"center\" justifyContent=\"center\" className='gridContainer'>\n                <Container maxWidth=\"sm\">\n                    <Grid container direction=\"column\">\n\n                        {error &&\n                            <Error time={2000} setError={setError}>{error}</Error>\n                        }\n                        <Typography variant=\"h4\" component=\"h1\" align=\"center\">ToDo</Typography>\n                        <InputForm setTasks={setTasks} createTaskFetch={createTaskFetch}/>\n                        <Filter setFilter={setFilter}/>\n                        <ToDoList displayedTasks={displayedTasks} deleteTaskFetch={deleteTaskFetch} editTaskFetch={editTaskFetch}/>\n                        <Pagination\n                            count={Math.ceil(tasks.length / paginate.limit)}\n                            onChange={(e, page) => setPaginate(state => ({...state, page}))}\n                            page={paginate.page}\n                            className='todo-pagination'\n                        />\n                    </Grid>\n                </Container>\n            </Grid>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
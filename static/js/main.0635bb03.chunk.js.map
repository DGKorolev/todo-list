{"version":3,"sources":["components/Navigation.js","http/axiosWithCredentials.js","services/AuthProvider.js","hooks/createFetch.js","services/auth.js","page/Login.js","page/Registration.js","components/Error.js","components/InputForm.js","components/Filter.js","components/ToDoListItem.js","components/ToDoList.js","services/task.js","page/Tasks.js","routes.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navigation","logged","logout","classes","AppBar","position","Toolbar","className","to","process","Typography","variant","Button","color","onClick","axiosWithCredentials","axios","create","withCredentials","baseURL","tokenProvider","observers","localStorageKey","getExpirationDate","token","JSON","parse","atob","split","exp","getToken","a","localStorage","getItem","Date","now","post","updatedToken","setToken","data","isLoggedIn","setItem","removeItem","notify","isLogged","forEach","observer","subscribe","push","unsubscribe","filter","_observer","createTokenProvider","axiosWithToken","interceptors","request","use","req","headers","Authorization","useAuth","useState","setIsLogged","listener","useCallback","newIsLogged","useEffect","login","newTokens","createAuthProvider","createFetch","callback","setError","message","console","log","Auth","registrationFormData","res","status","Error","loginFormData","Login","redirect","setRedirect","validationSchema","yup","shape","email","required","password","registrationFetch","values","jwtToken","Grid","container","alignItems","justifyContent","style","height","Container","maxWidth","initialValues","confirmPassword","onSubmit","validateOnBlur","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","isSubmitting","direction","component","align","TextField","name","label","type","utocomplete","error","helperText","onChange","onBlur","value","Box","mt","disabled","Registration","oneOf","registration","display","textAlign","background","palette","light","borderRadius","padding","children","time","setTimeout","p","inputForm","join","marginTop","width","InputForm","createTaskFetch","setName","keyDownInputHandler","e","code","trim","Input","placeholder","target","onKeyDown","ASC","DESC","Filter","setFilter","handlerFilterButton","filterType","state","handlerSortButton","ascending","sortDirection","IconButton","listItem","border","grey","transition","completed","borderColor","success","main","hiddenInput","ToDoListItem","task","editTaskFetch","deleteTaskFetch","dragAndDrop","changePosition","setHiddenInput","clickDeleteHandler","stopPropagation","id","ListItem","done","onDragStart","dragStartHandler","onDragLeave","dragLeaveHandler","onDragOver","dragOverHandler","onDragEnd","dragEndHandler","onDrop","onDropHandler","draggable","size","autoFocus","defaultValue","createdAt","substr","ToDoList","displayedTasks","tasks","currentTask","setCurrentTask","getDragAndDrop","transform","preventDefault","reduce","taskItem","menu_position","newMenuPosition","Math","ceil","List","length","map","Task","filterBy","order","params","get","taskName","taskId","editData","patch","delete","Tasks","setTasks","page","limit","paginate","setPaginate","fetchTasks","useMemo","getAll","response","paginateState","edit","slice","Pagination","count","LoginRoutes","path","NotLoginRoutes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0635bb03.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {AppBar, Button, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Navigation = ({logged, logout}) => {\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                <div className={classes.title}>\n                    {logged && (\n\n                        <Link to={`${process.env.REACT_APP_PATH_GH_PAGE}/`}>\n                            <Typography variant=\"h6\">\n                                Tasks\n                            </Typography>\n                        </Link>\n\n                    )}\n                </div>\n\n                <div>\n                    {!logged ? (<>\n                            <Link to={`${process.env.REACT_APP_PATH_GH_PAGE}/login`}>\n                                <Button color=\"inherit\">Login</Button>\n                            </Link>\n                            <Link to={`${process.env.REACT_APP_PATH_GH_PAGE}/registration`}>\n                                <Button color=\"inherit\">Registration</Button>\n                            </Link>\n                        </>)\n                        : (<Button\n                            color=\"inherit\"\n                            onClick={logout}\n                        >\n                            Logout\n                        </Button>)\n                    }\n\n\n                </div>\n\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Navigation;","import axios from \"axios\";\n\nconst axiosWithCredentials = axios.create({\n    withCredentials: true,\n    baseURL: process.env.REACT_APP_API_ADDRESS\n})\n\nexport default axiosWithCredentials","import {useCallback, useEffect, useState} from 'react';\nimport axios from \"axios\";\n\nimport axiosWithCredentials from \"../http/axiosWithCredentials\";\nconst createTokenProvider = () => {\n\n    let  observers = [];\n\n\n    const localStorageKey = 'jwtToken'\n\n    const getExpirationDate = (token) => {\n        if (!token) {\n            return null;\n        }\n\n        const jwt = JSON.parse(atob(token.split('.')[1]));\n        return jwt.exp * 1000 || null;\n    };\n\n\n    const isExpired = (exp) => {\n        if (!exp) {\n            return false;\n        }\n\n        return Date.now() > exp;\n    };\n\n    const getToken = async () => {\n\n        const token = localStorage.getItem('jwtToken')\n\n        if (isExpired(getExpirationDate(token))) {\n            const updatedToken = await axiosWithCredentials.post('/refresh-token')\n            setToken(updatedToken.data[localStorageKey]);\n        }\n\n        return localStorage.getItem('jwtToken')\n    };\n\n    const isLoggedIn = () => {\n        return !!localStorage.getItem('jwtToken');\n    };\n\n    const setToken = (token) => {\n\n        if (token) {\n            localStorage.setItem(localStorageKey, token);\n        } else {\n            localStorage.removeItem(localStorageKey);\n        }\n\n        notify();\n    };\n\n    const notify = () => {\n        const isLogged = isLoggedIn();\n        observers.forEach(observer => observer(isLogged));\n    };\n\n    const subscribe = (observer) => {\n        observers.push(observer);\n    };\n\n    const unsubscribe = (observer) => {\n        observers = observers.filter(_observer => _observer !== observer);\n    };\n\n    return {\n        getToken,\n        isLoggedIn,\n        setToken,\n        subscribe,\n        unsubscribe,\n    };\n}\n\n\nexport const createAuthProvider = () => {\n\n\n\n    const tokenProvider = createTokenProvider()\n\n    let axiosWithToken = axios.create({\n        baseURL: process.env.REACT_APP_API_ADDRESS\n    })\n\n    axiosWithToken.interceptors.request.use(async req => {\n\n        req.headers.Authorization = `Bearer ${await tokenProvider.getToken()}`;\n\n        return req;\n    })\n\n    const login = (newTokens) => {\n        tokenProvider.setToken(newTokens);\n    };\n\n    const logout = async () => {\n        await axiosWithCredentials.post('/logout')\n        tokenProvider.setToken(null);\n    };\n\n    // const authFetch = async (input, init) => {\n    //\n    //     const token = await tokenProvider.getToken();\n    //\n    //     init = init || {};\n    //\n    //     init.headers = {\n    //         ...init.headers,\n    //         Authorization: `Bearer ${token}`,\n    //     };\n    //\n    //     return fetch(input, init);\n    // };\n\n    const useAuth = () => {\n\n        const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\n\n        const listener = useCallback(\n            (newIsLogged) => {\n                setIsLogged(newIsLogged);\n            },\n            [setIsLogged],\n        );\n\n        useEffect(() => {\n\n            tokenProvider.subscribe(listener);\n\n            return () => {\n                tokenProvider.unsubscribe(listener);\n            };\n\n        }, [listener]);\n\n        return isLogged;\n    };\n\n    return {useAuth, axiosWithToken, login, logout}\n};\n\nconst {useAuth, axiosWithToken, login, logout} = createAuthProvider();\n\nexport {useAuth};\nexport {login};\nexport {axiosWithToken};\nexport {logout};\n","export const createFetch = (callback, setError = null) => {\n\n    return async (...ars) => {\n\n        try {\n\n            return await callback(...ars)\n\n        }catch (e){\n            if (setError) setError(e.message)\n            console.log(e.message)\n        }\n\n    }\n\n}","import axiosWithCredentials from \"../http/axiosWithCredentials\";\n\nexport default class Auth {\n\n    static async registration(registrationFormData) {\n\n        const res = await axiosWithCredentials.post('/registration', registrationFormData)\n\n        if (res.status !== 200) throw Error('Failed to get the task list')\n\n        return res.data\n\n    }\n\n    static async login(loginFormData) {\n\n        const res = await axiosWithCredentials.post('/login', loginFormData)\n\n        if (res.status !== 200) throw Error('Failed to get the task list')\n\n        return res.data\n\n    }\n\n}","import React, {useState} from 'react';\nimport {Container, Grid, Typography, TextField, Button, Box} from '@material-ui/core';\nimport {createFetch} from \"../hooks/createFetch\";\nimport Auth from \"../services/auth\";\nimport * as yup from \"yup\";\nimport {Formik} from \"formik\";\nimport {Redirect} from \"react-router-dom\";\n\nconst Login = ({login, ...props}) => {\n\n    const [redirect, setRedirect] = useState(false)\n\n    const validationSchema = yup.object().shape({\n        email: yup.string().required().email(),\n        password: yup.string().required(),\n    })\n\n\n    const registrationFetch = createFetch(async (values) => {\n\n        const res = await Auth.login(values)\n\n        if (!res.jwtToken) return\n\n        setRedirect(true)\n        login(res.jwtToken)\n    })\n\n    if (redirect) {\n        return (<Redirect to=\"/\"/>)\n    }\n\n    return (\n        <Grid container alignItems='center' justifyContent='center' style={{height: '100vh'}}>\n            <Container maxWidth='sm'>\n\n                <Formik\n                    initialValues={{\n                        email: '',\n                        password: '',\n                        confirmPassword: ''\n                    }}\n                    onSubmit={(values) => {\n                        registrationFetch(values)\n                    }}\n                    validationSchema={validationSchema}\n                    validateOnBlur\n                >\n                    {(\n                        {\n                            values,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            isValid,\n                            handleSubmit,\n                            dirty,\n                            isSubmitting\n                        }) => (\n                        <>\n                            <form>\n                                <Grid container direction='column' className='formContainer'>\n                                    <Typography variant=\"h4\" component=\"h4\" align='center'>Login</Typography>\n                                    <TextField\n                                        name='email'\n                                        label='Login'\n                                        type='text'\n                                        utocomplete=\"username email\"\n                                        error={!!(touched.email && errors.email)}\n                                        helperText={touched.email && errors.email}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                    />\n                                    <TextField\n                                        name='password'\n                                        label='Password'\n                                        type='text'\n                                        utocomplete=\"password\"\n                                        error={!!(touched.password && errors.password)}\n                                        helperText={touched.password && errors.password}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                    />\n                                </Grid>\n                                <Box mt={3}>\n                                    <Button\n                                        disabled={!dirty || !isValid || isSubmitting}\n                                        variant='contained'\n                                        color='primary'\n                                        type='submit'\n                                        onClick={handleSubmit}\n                                    >\n                                        Login\n                                    </Button>\n                                </Box>\n                            </form>\n                        </>\n                    )}\n                </Formik>\n            </Container>\n        </Grid>\n\n    );\n};\n\nexport default Login;","import React, {useState} from 'react';\nimport {Box, Button, Container, Grid, TextField, Typography} from \"@material-ui/core\";\nimport Auth from '../services/auth'\nimport {createFetch} from \"../hooks/createFetch\";\nimport {Formik} from \"formik\";\nimport * as yup from 'yup';\nimport {Redirect} from \"react-router-dom\";\n\nconst Registration = ({login}) => {\n\n    const [redirect, setRedirect] = useState(false)\n\n    const validationSchema = yup.object().shape({\n        email: yup.string().required().email(),\n        password: yup.string().required(),\n        confirmPassword: yup.string().required().oneOf([yup.ref('password')], 'Password mismatch'),\n    })\n\n\n    const registrationFetch = createFetch(async (values) => {\n\n        const res = await Auth.registration(values)\n\n        if (!res.jwtToken) return\n\n        setRedirect(true)\n        login(res.jwtToken)\n    })\n\n    if (redirect) {\n        return (<Redirect to=\"/\"/>)\n    }\n\n    return (\n        <Grid container alignItems='center' justifyContent='center' style={{height: '100vh'}}>\n            <Container maxWidth='sm'>\n\n                <Formik\n                    initialValues={{\n                        email: '',\n                        password: '',\n                        confirmPassword: ''\n                    }}\n                    onSubmit={(values) => {\n                        delete values.confirmPassword\n                        registrationFetch(values)\n                    }}\n                    validationSchema={validationSchema}\n                    validateOnBlur\n                >\n                    {(\n                        {\n                            values,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            isValid,\n                            handleSubmit,\n                            dirty,\n                            isSubmitting\n                        }) => (\n                        <>\n                            <form>\n                                <Grid container direction='column' className='formContainer'>\n                                    <Typography variant=\"h4\" component=\"h4\" align='center'>Registration</Typography>\n                                    <TextField\n                                        name='email'\n                                        label='Login'\n                                        type='text'\n                                        utocomplete=\"username email\"\n                                        error={!!(touched.email && errors.email)}\n                                        helperText={touched.email && errors.email}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                    />\n                                    <TextField\n                                        name='password'\n                                        label='Password'\n                                        type='text'\n                                        utocomplete=\"password\"\n                                        error={!!(touched.password && errors.password)}\n                                        helperText={touched.password && errors.password}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                    />\n                                    <TextField\n                                        name='confirmPassword'\n                                        label='Confirm password'\n                                        type='text'\n                                        utocomplete=\"password\"\n                                        error={!!(touched.confirmPassword && errors.confirmPassword)}\n                                        helperText={touched.confirmPassword && errors.confirmPassword}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.confirmPassword}\n                                    />\n                                </Grid>\n                                <Box mt={3}>\n                                    <Button\n                                        disabled={!dirty || !isValid || isSubmitting}\n                                        variant='contained'\n                                        color='primary'\n                                        type='submit'\n                                        onClick={handleSubmit}\n                                    >\n                                        Registration\n                                    </Button>\n                                </Box>\n                            </form>\n                        </>\n                    )}\n                </Formik>\n            </Container>\n        </Grid>\n    );\n};\n\nexport default Registration;","import React, {useEffect} from 'react';\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        display: 'block',\n        textAlign: \"center\",\n        background: theme.palette.error.light,\n        borderRadius: '5px',\n        padding: '8px 24px',\n    }\n}))\n\nconst Error = ({children, setError, time}) => {\n\n    const classes = useStyles()\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setError('')\n        }, time)\n\n    }, )\n\n    return (\n        <Box p={1}>\n            <Typography component={'span'} className={classes.error}>{children}</Typography>\n        </Box>\n    );\n};\n\nexport default Error;","import React, {useState} from 'react';\nimport {Input, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    inputForm: {\n        padding: [theme.spacing(1), theme.spacing(1)].join(' '),\n        marginTop: theme.spacing(2),\n        width: '100%'\n    }\n}))\n\n\nconst InputForm = ({createTaskFetch}) => {\n\n    const classes = useStyles()\n    const [name, setName] = useState('')\n\n    const keyDownInputHandler = async (e) => {\n        if(e.code === \"Enter\" && name.trim()) {\n            await createTaskFetch(name)\n            setName('')\n        }\n    }\n\n    const changeInputHandler = (e) => {\n        setName(e.target.value)\n    }\n\n    return (\n        <>\n            <Input\n                // className={classes.input_form}\n                className={classes.inputForm}\n                type=\"text\"\n                placeholder=\"i want to ...\"\n                value={name}\n                onChange={changeInputHandler}\n                onKeyDown={keyDownInputHandler}\n            />\n\n        </>\n    );\n};\n\nexport default InputForm;","import React from 'react';\nimport {Box, Button, Grid, IconButton, Typography} from \"@material-ui/core\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport const DONE = 'done'\nexport const UNDONE = 'undone'\n\nexport const ASC = 'asc'\nexport const DESC = 'desc'\n\nconst Filter = ({setFilter}) => {\n\n    const handlerFilterButton = (filterType) => {\n        return () => setFilter(state => ({...state, filterType}))\n    }\n\n    const handlerSortButton = (ascending) => {\n        return () => setFilter(state => ({...state, sortDirection: ascending}))\n    }\n\n    return (\n        <Box mt={2}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" >\n                <Box>\n                    <Button onClick={handlerFilterButton('')}>\n                        All\n                    </Button>\n                    <Button onClick={handlerFilterButton(DONE)}>\n                        Done\n                    </Button>\n                    <Button onClick={handlerFilterButton(UNDONE)}>\n                        Undone\n                    </Button>\n                </Box>\n                <Box>\n                    <Typography display=\"inline\">Sort by Date</Typography>\n                    <IconButton\n                        onClick={handlerSortButton(DESC)}\n                    >\n                        <ArrowUpwardIcon/>\n                    </IconButton>\n                    <IconButton\n                        onClick={handlerSortButton(ASC)}\n                    >\n                        <ArrowDownwardIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Filter;","import React, {useState} from 'react';\nimport {Box, Grid, IconButton, Input, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n\n    listItem: {\n        borderRadius: '5px',\n        border: '1px solid' + theme.palette.grey[\"400\"],\n        marginTop: theme.spacing(1),\n        transition: 'all .4s',\n    },\n    completed: {\n        background: '#eaffe9',\n        borderColor: theme.palette.success.main\n    },\n    hiddenInput: {\n        width: \"100px\",\n    }\n\n}))\n\nconst ToDoListItem = ({task, editTaskFetch, deleteTaskFetch, changePosition, dragAndDrop}) => {\n\n    let classes = useStyles()\n\n    const [hiddenInput, setHiddenInput] = useState(true)\n\n\n    const clickDeleteHandler = async (e) => {\n        e.stopPropagation()\n        deleteTaskFetch(task.id)\n    }\n\n    const inputKeyDownHandler = (e) => {\n\n        if (e.code === \"Enter\") {\n            editTaskFetch(task.id, {name: e.target.value})\n            setHiddenInput(true)\n        }\n\n        if (e.code === \"Escape\") {\n            setHiddenInput(true)\n        }\n\n    }\n\n    const clickConfirmHandler = (e) => {\n        e.stopPropagation()\n        editTaskFetch(task.id, {done: true})\n    }\n\n    const clickTaskHandler = (e) => {\n        e.stopPropagation()\n        setHiddenInput(false)\n    }\n\n    return (\n        <ListItem\n            className={task.done ? [classes.listItem, classes.completed].join(' ') : classes.listItem}\n            onClick={clickTaskHandler}\n            onDragStart={dragAndDrop.dragStartHandler}\n            onDragLeave={dragAndDrop.dragLeaveHandler}\n            onDragOver={dragAndDrop.dragOverHandler}\n            onDragEnd={dragAndDrop.dragEndHandler}\n            onDrop={dragAndDrop.onDropHandler}\n            draggable\n        >\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Box>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickConfirmHandler}\n                        className=\"icon-button\"\n                    >\n                        <CheckCircleOutlineIcon/>\n                    </IconButton>\n                    {hiddenInput\n                        ? <Typography component=\"span\">{task.name}</Typography>\n                        : <Input\n                            autoFocus\n                            onBlur={() => setHiddenInput(true)}\n                            onKeyDown={inputKeyDownHandler}\n                            defaultValue={task.name}\n                        />\n                    }\n                </Box>\n\n                <Box>\n                    <Typography component=\"span\">{task.createdAt.substr(0, 10)}</Typography>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickDeleteHandler}\n                        className=\"icon-button\"\n                    >\n                        <DeleteForeverIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </ListItem>\n    );\n};\n\nexport default ToDoListItem;","import React, {useState} from 'react';\nimport ToDoListItem from \"./ToDoListItem\";\nimport {List} from \"@material-ui/core\";\n\nconst ToDoList = ({displayedTasks, editTaskFetch, deleteTaskFetch, changePosition, tasks, filter}) => {\n\n    const [currentTask, setCurrentTask] = useState({})\n\n    const getDragAndDrop = (task) => ({\n\n        dragStartHandler: (e) => {\n            setCurrentTask(task)\n        },\n\n        dragLeaveHandler: (e) => {\n            e.target.style.transform = '';\n        },\n\n        dragOverHandler: (e) => {\n            e.preventDefault()\n            e.target.style.transform = 'scale(1.03)';\n        },\n\n        onDropHandler: (e) => {\n            e.preventDefault()\n\n            const res = tasks.reduce((res, taskItem) => {\n\n                if (currentTask.menu_position > task.menu_position) {\n                    return taskItem.menu_position > task.menu_position && taskItem.menu_position < res ? taskItem.menu_position : res\n                }\n\n                return taskItem.menu_position < task.menu_position && taskItem.menu_position > res ? taskItem.menu_position : res\n\n            }, currentTask.menu_position)\n\n\n            const newMenuPosition = task.menu_position - Math.ceil((res - task.menu_position) / 2)\n\n\n            editTaskFetch(currentTask.id, {\n                menu_position: newMenuPosition\n            })\n\n        }\n\n    })\n\n\n    return (\n        <List>\n            {displayedTasks.length > 0 && displayedTasks.map(task =>\n                <ToDoListItem\n                    key={task.id}\n                    task={task}\n                    editTaskFetch={editTaskFetch}\n                    deleteTaskFetch={deleteTaskFetch}\n                    changePosition={changePosition}\n                    dragAndDrop={getDragAndDrop(task)}\n                />\n            )}\n        </List>\n    );\n};\n\nexport default ToDoList;","import {ASC} from \"../components/Filter\";\nimport {axiosWithToken} from \"./AuthProvider\";\n\nexport default class Task {\n\n    static async getAll(filterBy = '', order = ASC) {\n\n\n        const params = {\n            order,\n        }\n\n        if (filterBy) params.filterBy = filterBy\n\n        const res = await axiosWithToken.get('/tasks', {params})\n\n        if (res.status !== 200) throw Error('Failed to get the task list')\n\n        return res.data\n\n    }\n\n    static async create(taskName) {\n\n        const res = await axiosWithToken.post('/task', {\n            name: taskName,\n            done: false\n        })\n\n        if (res.status !== 200) throw Error('Task not created')\n\n        return res.data\n    }\n\n    static async edit(taskId, editData) {\n\n        const res = await axiosWithToken.patch(`/task/${taskId}`, editData)\n\n        if (res.status !== 200) throw Error('Data change error')\n\n        return res.data\n    }\n\n    static async delete(taskId) {\n\n        const res = await axiosWithToken.delete(`/task/${taskId}`)\n\n        if (res.status !== 204) throw Error('Data deletion error')\n\n        return res.data\n\n    }\n\n}","import React, {useEffect, useMemo, useState} from 'react';\nimport {Container, Grid, Typography} from \"@material-ui/core\";\nimport Error from \"../components/Error\";\nimport InputForm from \"../components/InputForm\";\nimport Filter, {DESC} from \"../components/Filter\";\nimport ToDoList from \"../components/ToDoList\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {createFetch} from \"../hooks/createFetch\";\nimport Task from \"../services/task\";\n\nconst Tasks = () => {\n\n    const [error, setError] = useState('')\n\n    const [tasks, setTasks] = useState([])\n\n    const [filter, setFilter] = useState({\n        sortDirection: DESC,\n        filterType: '',\n    })\n\n    const [paginate, setPaginate] = useState({\n        page: 1,\n        limit: 5\n    })\n\n\n    const fetchTasks = useMemo(() => {\n        return createFetch(async () => {\n            const response = await Task.getAll(filter.filterType, filter.sortDirection)\n            setTasks(response)\n        }, setError)\n    }, [filter])\n\n\n    const createTaskFetch = createFetch(async (name) => {\n        await Task.create(name)\n        setPaginate(paginateState => ({...paginateState, page: 1}))\n\n        setFilter({\n            sortDirection: DESC,\n            filterType: ''\n        })\n\n    }, setError)\n\n    const editTaskFetch = createFetch(async (id, editData) => {\n        await Task.edit(id, editData)\n        fetchTasks()\n    }, setError)\n\n    const deleteTaskFetch = createFetch(async (id) => {\n        await Task.delete(id)\n        fetchTasks()\n    }, setError)\n\n\n    useEffect(() => {\n        fetchTasks()\n    }, [fetchTasks]);\n\n\n    useEffect(() => {\n        setPaginate(state => ({...state, page: 1}))\n    }, [filter])\n\n    const displayedTasks = useMemo(() => {\n        return tasks.slice((paginate.page - 1) * paginate.limit, (paginate.page - 1) * paginate.limit + paginate.limit)\n    }, [tasks, paginate])\n\n    return (\n        <Grid container alignItems=\"center\" justifyContent=\"center\" className='gridContainer' style={{height: '100vh'}}>\n            <Container maxWidth=\"sm\">\n                <Grid container direction=\"column\">\n\n                    {error &&\n                    <Error time={2000} setError={setError}>{error}</Error>\n                    }\n                    <Typography variant=\"h4\" component=\"h1\" align=\"center\">ToDo</Typography>\n                    <InputForm setTasks={setTasks} createTaskFetch={createTaskFetch}/>\n                    <Filter setFilter={setFilter}/>\n                    <ToDoList\n                        displayedTasks={displayedTasks}\n                        deleteTaskFetch={deleteTaskFetch}\n                        editTaskFetch={editTaskFetch}\n                        tasks={tasks}\n                        filter={filter}\n                    />\n                    <Pagination\n                        count={Math.ceil(tasks.length / paginate.limit)}\n                        onChange={(e, page) => setPaginate(state => ({...state, page}))}\n                        page={paginate.page}\n                        className='todo-pagination'\n                    />\n                </Grid>\n            </Container>\n        </Grid>\n    );\n};\n\nexport default Tasks;","import {Redirect, Route} from \"react-router-dom\";\nimport Login from \"./page/Login\";\nimport {login} from \"./services/AuthProvider\";\nimport Registration from \"./page/Registration\";\nimport React from \"react\";\nimport Tasks from \"./page/Tasks\";\n\n\n\nexport const LoginRoutes = (\n    <>\n        <Route path={`${process.env.REACT_APP_PATH_GH_PAGE}/login`}>\n            <Login login={login}/>\n        </Route>\n        <Route path={`${process.env.REACT_APP_PATH_GH_PAGE}/registration`}>\n            <Registration login={login}/>\n        </Route>\n        <Redirect path={`${process.env.REACT_APP_PATH_GH_PAGE}/login`}/>\n    </>\n)\n\nexport const NotLoginRoutes = (\n    <>\n        <Route path={`${process.env.REACT_APP_PATH_GH_PAGE}/`}>\n            <Tasks/>\n        </Route>\n        <Redirect to={`${process.env.REACT_APP_PATH_GH_PAGE}/`} />\n    </>\n)\n","import './App.css';\nimport React from \"react\";\nimport {\n    BrowserRouter,\n    Switch\n} from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport {useAuth, logout} from './services/AuthProvider'\nimport {LoginRoutes, NotLoginRoutes} from './routes'\n\n\nfunction App() {\n\n    const logged = useAuth();\n\n    return (\n        <BrowserRouter>\n\n            <Navigation logged={logged} logout={logout}/>\n\n            <Switch>\n                {!logged\n                    ? LoginRoutes\n                    : NotLoginRoutes\n                }\n            </Switch>\n\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
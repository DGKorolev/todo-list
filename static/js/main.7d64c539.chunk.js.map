{"version":3,"sources":["components/Navigation.js","http/axios.js","services/auth.js","services/AuthProvider.js","hooks/createFetch.js","page/Login.js","page/Registration.js","components/Error.js","components/InputForm.js","components/Filter.js","components/ToDoListItem.js","components/ToDoList.js","services/task.js","page/Tasks.js","components/Routes.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navigation","logged","logout","classes","AppBar","position","Toolbar","className","to","Typography","variant","Button","color","onClick","axiosWithCredentials","ax","create","baseURL","process","withCredentials","Auth","registrationFormData","post","res","status","Error","data","loginFormData","console","log","tokenProvider","observers","localStorageKey","getExpirationDate","token","JSON","parse","atob","split","exp","getToken","a","localStorage","getItem","Date","now","refreshToken","updatedToken","setToken","isLoggedIn","setItem","removeItem","notify","isLogged","forEach","observer","subscribe","push","unsubscribe","filter","_observer","createTokenProvider","axiosWithToken","axios","interceptors","request","use","req","headers","Authorization","useAuth","useState","setIsLogged","listener","useCallback","newIsLogged","useEffect","login","newTokens","createAuthProvider","createFetch","callback","setError","responseMessage","response","message","Login","redirect","setRedirect","validationSchema","yup","shape","email","required","password","registrationFetch","values","jwtToken","Grid","container","alignItems","justifyContent","style","height","Container","maxWidth","initialValues","confirmPassword","onSubmit","validateOnBlur","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","isSubmitting","direction","component","align","TextField","name","label","type","utocomplete","error","helperText","onChange","onBlur","value","Box","mt","disabled","Registration","oneOf","registration","display","textAlign","background","palette","light","borderRadius","padding","children","time","setTimeout","p","inputForm","join","marginTop","width","InputForm","createTaskFetch","setName","keyDownInputHandler","e","code","trim","Input","placeholder","target","onKeyDown","ASC","DESC","Filter","setFilter","handlerFilterButton","filterType","state","handlerSortButton","ascending","sortDirection","IconButton","listItem","border","grey","transition","completed","borderColor","success","main","hiddenInput","ToDoListItem","task","editTaskFetch","deleteTaskFetch","dragAndDrop","changePosition","setHiddenInput","clickDeleteHandler","stopPropagation","id","ListItem","done","onDragStart","dragStartHandler","onDragLeave","dragLeaveHandler","onDragOver","dragOverHandler","onDragEnd","dragEndHandler","onDrop","onDropHandler","draggable","size","autoFocus","defaultValue","createdAt","substr","ToDoList","displayedTasks","currentTask","setCurrentTask","getDragAndDrop","transform","preventDefault","selectedTaskId","targetTaskId","change_position","List","length","map","Task","filterBy","order","params","get","taskName","taskId","editData","patch","delete","Tasks","tasks","setTasks","page","limit","paginate","setPaginate","fetchTasks","useMemo","getAll","paginateState","edit","slice","Pagination","count","Math","ceil","MyComponent","path","App","basename","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d64c539.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {AppBar, Button, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Navigation = ({logged, logout}) => {\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                <div className={classes.title}>\n                    {logged && (\n\n                        <Link to='/'>\n                            <Typography variant=\"h6\">\n                                Tasks\n                            </Typography>\n                        </Link>\n\n                    )}\n                </div>\n\n                <div>\n                    {!logged ? (<>\n                            <Link to='/login'>\n                                <Button color=\"inherit\">Login</Button>\n                            </Link>\n                            <Link to='/registration'>\n                                <Button color=\"inherit\">Registration</Button>\n                            </Link>\n                        </>)\n                        : (<Button\n                            color=\"inherit\"\n                            onClick={logout}\n                        >\n                            Logout\n                        </Button>)\n                    }\n\n\n                </div>\n\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Navigation;","import ax from \"axios\";\n\nexport const axios = ax.create({\n    baseURL: process.env.REACT_APP_API_ADDRESS\n})\n\nexport const axiosWithCredentials = ax.create({\n    withCredentials: true,\n    baseURL: process.env.REACT_APP_API_ADDRESS\n})","import {axiosWithCredentials} from \"../http/axios\";\n\nexport default class Auth {\n\n    static async registration(registrationFormData) {\n\n        const res = await axiosWithCredentials.post('/registration', registrationFormData)\n\n        if (res.status !== 200) throw Error('Failed to get the task list')\n\n        return res.data\n\n    }\n\n    static async login(loginFormData) {\n\n        const res = await axiosWithCredentials.post('/login', loginFormData)\n\n        if (res.status !== 200) throw Error('Failed to get the task list')\n\n        return res.data\n\n    }\n\n    static async logout(){\n        const res = await axiosWithCredentials.post('/logout')\n        console.log(res)\n    }\n\n    static async refreshToken(){\n        return await axiosWithCredentials.post('/refresh-token')\n    }\n\n}","import {useCallback, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport Auth from \"./auth\";\n\nconst createTokenProvider = () => {\n\n    let  observers = [];\n\n\n    const localStorageKey = 'jwtToken'\n\n    const getExpirationDate = (token) => {\n        if (!token) {\n            return null;\n        }\n\n        const jwt = JSON.parse(atob(token.split('.')[1]));\n        return jwt.exp * 1000 || null;\n    };\n\n\n    const isExpired = (exp) => {\n        if (!exp) {\n            return false;\n        }\n\n        return Date.now() > exp;\n    };\n\n    const getToken = async () => {\n\n        const token = localStorage.getItem('jwtToken')\n\n        if (isExpired(getExpirationDate(token))) {\n            const updatedToken = await Auth.refreshToken()\n            setToken(updatedToken.data[localStorageKey]);\n        }\n\n        return localStorage.getItem('jwtToken')\n    };\n\n    const isLoggedIn = () => {\n        return !!localStorage.getItem('jwtToken');\n    };\n\n    const setToken = (token) => {\n\n        if (token) {\n            localStorage.setItem(localStorageKey, token);\n        } else {\n            localStorage.removeItem(localStorageKey);\n        }\n\n        notify();\n    };\n\n    const notify = () => {\n        const isLogged = isLoggedIn();\n        observers.forEach(observer => observer(isLogged));\n    };\n\n    const subscribe = (observer) => {\n        observers.push(observer);\n    };\n\n    const unsubscribe = (observer) => {\n        observers = observers.filter(_observer => _observer !== observer);\n    };\n\n    return {\n        getToken,\n        isLoggedIn,\n        setToken,\n        subscribe,\n        unsubscribe,\n    };\n}\n\n\nexport const createAuthProvider = () => {\n\n    const tokenProvider = createTokenProvider()\n\n    let axiosWithToken = axios.create({\n        baseURL: process.env.REACT_APP_API_ADDRESS\n    })\n\n    axiosWithToken.interceptors.request.use(async req => {\n\n        req.headers.Authorization = `Bearer ${await tokenProvider.getToken()}`;\n\n        return req;\n    })\n\n    const login = (newTokens) => {\n        tokenProvider.setToken(newTokens);\n    };\n\n    const logout = async () => {\n        await Auth.logout()\n        tokenProvider.setToken(null);\n    };\n\n    const useAuth = () => {\n\n        const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\n\n        const listener = useCallback(\n            (newIsLogged) => {\n                setIsLogged(newIsLogged);\n            },\n            [setIsLogged],\n        );\n\n        useEffect(() => {\n\n            tokenProvider.subscribe(listener);\n\n            return () => {\n                tokenProvider.unsubscribe(listener);\n            };\n\n        }, [listener]);\n\n        return isLogged;\n    };\n\n    return {useAuth, axiosWithToken, login, logout}\n};\n\nconst {useAuth, axiosWithToken, login, logout} = createAuthProvider();\n\nexport {useAuth};\nexport {login};\nexport {axiosWithToken};\nexport {logout};\n","export const createFetch = (callback, setError = null) => {\n\n    return async (...ars) => {\n\n        try {\n\n            return await callback(...ars)\n\n        }catch (e){\n            const responseMessage = e.response.data.message\n            if (setError) setError(responseMessage ? responseMessage : e.message)\n            console.log(e.message)\n        }\n\n    }\n\n}","import React, {useState} from 'react';\nimport {Container, Grid, Typography, TextField, Button, Box} from '@material-ui/core';\nimport {createFetch} from \"../hooks/createFetch\";\nimport Auth from \"../services/auth\";\nimport * as yup from \"yup\";\nimport {Formik} from \"formik\";\nimport {Redirect} from \"react-router-dom\";\n\nconst Login = ({login, setError}) => {\n\n    const [redirect, setRedirect] = useState(false)\n\n    const validationSchema = yup.object().shape({\n        email: yup.string().required().email(),\n        password: yup.string().required(),\n    })\n\n    const registrationFetch = createFetch(async (values) => {\n\n        const res = await Auth.login(values)\n\n        if (!res.jwtToken) return\n\n        setRedirect(true)\n        login(res.jwtToken)\n\n    }, setError)\n\n    if (redirect) {\n        return (<Redirect to='/'/>)\n    }\n\n    return (\n        <Grid container alignItems='center' justifyContent='center' style={{height: '100vh'}}>\n            <Container maxWidth='sm'>\n\n                <Formik\n                    initialValues={{\n                        email: '',\n                        password: '',\n                        confirmPassword: ''\n                    }}\n                    onSubmit={(values) => {\n                        registrationFetch(values)\n                    }}\n                    validationSchema={validationSchema}\n                    validateOnBlur\n                >\n                    {(\n                        {\n                            values,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            isValid,\n                            handleSubmit,\n                            dirty,\n                            isSubmitting\n                        }) => (\n                        <>\n                            <form>\n                                <Grid container direction='column' className='formContainer'>\n                                    <Typography variant=\"h4\" component=\"h4\" align='center'>Login</Typography>\n                                    <TextField\n                                        name='email'\n                                        label='Login'\n                                        type='text'\n                                        utocomplete=\"username email\"\n                                        error={!!(touched.email && errors.email)}\n                                        helperText={touched.email && errors.email}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                    />\n                                    <TextField\n                                        name='password'\n                                        label='Password'\n                                        type='text'\n                                        utocomplete=\"password\"\n                                        error={!!(touched.password && errors.password)}\n                                        helperText={touched.password && errors.password}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                    />\n                                </Grid>\n                                <Box mt={3}>\n                                    <Button\n                                        disabled={!dirty || !isValid || isSubmitting}\n                                        variant='contained'\n                                        color='primary'\n                                        type='submit'\n                                        onClick={handleSubmit}\n                                    >\n                                        Login\n                                    </Button>\n                                </Box>\n                            </form>\n                        </>\n                    )}\n                </Formik>\n            </Container>\n        </Grid>\n\n    );\n};\n\nexport default Login;","import React, {useState} from 'react';\nimport {Box, Button, Container, Grid, TextField, Typography} from \"@material-ui/core\";\nimport Auth from '../services/auth'\nimport {createFetch} from \"../hooks/createFetch\";\nimport {Formik} from \"formik\";\nimport * as yup from 'yup';\nimport {Redirect} from \"react-router-dom\";\n\nconst Registration = ({login, setError}) => {\n\n    const [redirect, setRedirect] = useState(false)\n\n    const validationSchema = yup.object().shape({\n        email: yup.string().required().email(),\n        password: yup.string().required(),\n        confirmPassword: yup.string().required().oneOf([yup.ref('password')], 'Password mismatch'),\n    })\n\n\n    const registrationFetch = createFetch(async (values) => {\n\n        const res = await Auth.registration(values)\n\n        if (!res.jwtToken) return\n\n        setRedirect(true)\n        login(res.jwtToken)\n\n    }, setError)\n\n    if (redirect) {\n        return (<Redirect to='/'/>)\n    }\n\n    return (\n        <Grid container alignItems='center' justifyContent='center' style={{height: '100vh'}}>\n            <Container maxWidth='sm'>\n\n                <Formik\n                    initialValues={{\n                        email: '',\n                        password: '',\n                        confirmPassword: ''\n                    }}\n                    onSubmit={(values) => {\n                        delete values.confirmPassword\n                        registrationFetch(values)\n                    }}\n                    validationSchema={validationSchema}\n                    validateOnBlur\n                >\n                    {(\n                        {\n                            values,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            isValid,\n                            handleSubmit,\n                            dirty,\n                            isSubmitting\n                        }) => (\n                        <>\n                            <form>\n                                <Grid container direction='column' className='formContainer'>\n                                    <Typography variant=\"h4\" component=\"h4\" align='center'>Registration</Typography>\n                                    <TextField\n                                        name='email'\n                                        label='Login'\n                                        type='text'\n                                        utocomplete=\"username email\"\n                                        error={!!(touched.email && errors.email)}\n                                        helperText={touched.email && errors.email}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                    />\n                                    <TextField\n                                        name='password'\n                                        label='Password'\n                                        type='text'\n                                        utocomplete=\"password\"\n                                        error={!!(touched.password && errors.password)}\n                                        helperText={touched.password && errors.password}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                    />\n                                    <TextField\n                                        name='confirmPassword'\n                                        label='Confirm password'\n                                        type='text'\n                                        utocomplete=\"password\"\n                                        error={!!(touched.confirmPassword && errors.confirmPassword)}\n                                        helperText={touched.confirmPassword && errors.confirmPassword}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.confirmPassword}\n                                    />\n                                </Grid>\n                                <Box mt={3}>\n                                    <Button\n                                        disabled={!dirty || !isValid}\n                                        variant='contained'\n                                        color='primary'\n                                        type='submit'\n                                        onClick={handleSubmit}\n                                    >\n                                        Registration\n                                    </Button>\n                                </Box>\n                            </form>\n                        </>\n                    )}\n                </Formik>\n            </Container>\n        </Grid>\n    );\n};\n\nexport default Registration;","import React, {useEffect} from 'react';\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        display: 'block',\n        textAlign: \"center\",\n        background: theme.palette.error.light,\n        borderRadius: '5px',\n        padding: '8px 24px',\n    }\n}))\n\nconst Error = ({children, setError, time}) => {\n\n    const classes = useStyles()\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setError('')\n        }, time)\n\n    }, )\n\n    return (\n        <Box p={1} className='error_panel'>\n            <Typography component={'span'} className={classes.error}>{children}</Typography>\n        </Box>\n    );\n};\n\nexport default Error;","import React, {useState} from 'react';\nimport {Input, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    inputForm: {\n        padding: [theme.spacing(1), theme.spacing(1)].join(' '),\n        marginTop: theme.spacing(2),\n        width: '100%'\n    }\n}))\n\n\nconst InputForm = ({createTaskFetch}) => {\n\n    const classes = useStyles()\n    const [name, setName] = useState('')\n\n    const keyDownInputHandler = async (e) => {\n        if(e.code === \"Enter\" && name.trim()) {\n            await createTaskFetch(name)\n            setName('')\n        }\n    }\n\n    const changeInputHandler = (e) => {\n        setName(e.target.value)\n    }\n\n    return (\n        <>\n            <Input\n                // className={classes.input_form}\n                className={classes.inputForm}\n                type=\"text\"\n                placeholder=\"i want to ...\"\n                value={name}\n                onChange={changeInputHandler}\n                onKeyDown={keyDownInputHandler}\n            />\n\n        </>\n    );\n};\n\nexport default InputForm;","import React from 'react';\nimport {Box, Button, Grid, IconButton, Typography} from \"@material-ui/core\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport const DONE = 'done'\nexport const UNDONE = 'undone'\n\nexport const ASC = 'asc'\nexport const DESC = 'desc'\n\nconst Filter = ({setFilter}) => {\n\n    const handlerFilterButton = (filterType) => {\n        return () => setFilter(state => ({...state, filterType}))\n    }\n\n    const handlerSortButton = (ascending) => {\n        return () => setFilter(state => ({...state, sortDirection: ascending}))\n    }\n\n    return (\n        <Box mt={2}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" >\n                <Box>\n                    <Button onClick={handlerFilterButton('')}>\n                        All\n                    </Button>\n                    <Button onClick={handlerFilterButton(DONE)}>\n                        Done\n                    </Button>\n                    <Button onClick={handlerFilterButton(UNDONE)}>\n                        Undone\n                    </Button>\n                </Box>\n                <Box>\n                    <Typography display=\"inline\">Sort by Date</Typography>\n                    <IconButton\n                        onClick={handlerSortButton(DESC)}\n                    >\n                        <ArrowUpwardIcon/>\n                    </IconButton>\n                    <IconButton\n                        onClick={handlerSortButton(ASC)}\n                    >\n                        <ArrowDownwardIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Filter;","import React, {useState} from 'react';\nimport {Box, Grid, IconButton, Input, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n\n    listItem: {\n        borderRadius: '5px',\n        border: '1px solid' + theme.palette.grey[\"400\"],\n        marginTop: theme.spacing(1),\n        transition: 'all .4s',\n    },\n    completed: {\n        background: '#eaffe9',\n        borderColor: theme.palette.success.main\n    },\n    hiddenInput: {\n        width: \"100px\",\n    }\n\n}))\n\nconst ToDoListItem = ({task, editTaskFetch, deleteTaskFetch, changePosition, dragAndDrop}) => {\n\n    let classes = useStyles()\n\n    const [hiddenInput, setHiddenInput] = useState(true)\n\n\n    const clickDeleteHandler = async (e) => {\n        e.stopPropagation()\n        deleteTaskFetch(task.id)\n    }\n\n    const inputKeyDownHandler = (e) => {\n\n        if (e.code === \"Enter\") {\n            editTaskFetch(task.id, {name: e.target.value})\n            setHiddenInput(true)\n        }\n\n        if (e.code === \"Escape\") {\n            setHiddenInput(true)\n        }\n\n    }\n\n    const clickConfirmHandler = (e) => {\n        e.stopPropagation()\n        editTaskFetch(task.id, {done: true})\n    }\n\n    const clickTaskHandler = (e) => {\n        e.stopPropagation()\n        setHiddenInput(false)\n    }\n\n    return (\n        <ListItem\n            className={task.done ? [classes.listItem, classes.completed].join(' ') : classes.listItem}\n            onClick={clickTaskHandler}\n            onDragStart={dragAndDrop.dragStartHandler}\n            onDragLeave={dragAndDrop.dragLeaveHandler}\n            onDragOver={dragAndDrop.dragOverHandler}\n            onDragEnd={dragAndDrop.dragEndHandler}\n            onDrop={dragAndDrop.onDropHandler}\n            draggable\n        >\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Box>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickConfirmHandler}\n                        className=\"icon-button\"\n                    >\n                        <CheckCircleOutlineIcon/>\n                    </IconButton>\n                    {hiddenInput\n                        ? <Typography component=\"span\">{task.name}</Typography>\n                        : <Input\n                            autoFocus\n                            onBlur={() => setHiddenInput(true)}\n                            onKeyDown={inputKeyDownHandler}\n                            defaultValue={task.name}\n                        />\n                    }\n                </Box>\n\n                <Box>\n                    <Typography component=\"span\">{task.createdAt.substr(0, 10)}</Typography>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickDeleteHandler}\n                        className=\"icon-button\"\n                    >\n                        <DeleteForeverIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </ListItem>\n    );\n};\n\nexport default ToDoListItem;","import React, {useState} from 'react';\nimport ToDoListItem from \"./ToDoListItem\";\nimport {List} from \"@material-ui/core\";\n\nconst ToDoList = ({displayedTasks, editTaskFetch, deleteTaskFetch, changePosition}) => {\n\n    const [currentTask, setCurrentTask] = useState({})\n\n    const getDragAndDrop = (task) => ({\n\n        dragStartHandler: () => {\n            setCurrentTask(task)\n        },\n\n        dragLeaveHandler: (e) => {\n            e.target.style.transform = '';\n        },\n\n        dragOverHandler: (e) => {\n            e.preventDefault()\n            e.target.style.transform = 'scale(1.03)';\n        },\n\n        onDropHandler: (e) => {\n            e.preventDefault()\n\n            const selectedTaskId = currentTask.id\n            const targetTaskId = task.id\n\n            if (targetTaskId === selectedTaskId) return\n\n\n            editTaskFetch(currentTask.id, {\n                change_position: {\n                    selectedTaskId,\n                    targetTaskId\n                }\n            })\n\n        }\n\n    })\n\n\n    return (\n        <List>\n            {displayedTasks.length > 0 && displayedTasks.map(task =>\n                <ToDoListItem\n                    key={task.id}\n                    task={task}\n                    editTaskFetch={editTaskFetch}\n                    deleteTaskFetch={deleteTaskFetch}\n                    changePosition={changePosition}\n                    dragAndDrop={getDragAndDrop(task)}\n                />\n            )}\n        </List>\n\n\n    );\n};\n\nexport default ToDoList;","import {ASC} from \"../components/Filter\";\nimport {axiosWithToken} from \"./AuthProvider\";\n\nexport default class Task {\n\n    static async getAll(filterBy = '', order = ASC) {\n\n        const params = {\n            order,\n        }\n\n        if (filterBy) params.filterBy = filterBy\n\n        const res = await axiosWithToken.get('/tasks', {params})\n\n        if (res.status !== 200) throw Error('Failed to get the task list')\n\n        return res.data\n\n    }\n\n    static async create(taskName) {\n\n        const res = await axiosWithToken.post('/task', {\n            name: taskName,\n            done: false\n        })\n\n        if (res.status !== 200) throw Error('Task not created')\n\n        return res.data\n    }\n\n    static async edit(taskId, editData) {\n\n        const res = await axiosWithToken.patch(`/task/${taskId}`, editData)\n\n        if (res.status !== 200) throw Error('Data change error')\n\n        return res.data\n    }\n\n    static async delete(taskId) {\n\n        const res = await axiosWithToken.delete(`/task/${taskId}`)\n\n        if (res.status !== 204) throw Error('Data deletion error')\n\n        return res.data\n\n    }\n\n}","import React, {useEffect, useMemo, useState} from 'react';\nimport {Container, Grid, Typography} from \"@material-ui/core\";\nimport Error from \"../components/Error\";\nimport InputForm from \"../components/InputForm\";\nimport Filter, {DESC} from \"../components/Filter\";\nimport ToDoList from \"../components/ToDoList\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {createFetch} from \"../hooks/createFetch\";\nimport Task from \"../services/task\";\n\nconst Tasks = ({setError}) => {\n\n    const [tasks, setTasks] = useState([])\n\n    const [filter, setFilter] = useState({\n        sortDirection: DESC,\n        filterType: '',\n    })\n\n    const [paginate, setPaginate] = useState({\n        page: 1,\n        limit: 5\n    })\n\n\n    const fetchTasks = useMemo(() => {\n        return createFetch(async () => {\n            const response = await Task.getAll(filter.filterType, filter.sortDirection)\n            setTasks(response)\n        }, setError)\n    }, [filter])\n\n\n    const createTaskFetch = createFetch(async (name) => {\n        await Task.create(name)\n        setPaginate(paginateState => ({...paginateState, page: 1}))\n\n        setFilter({\n            sortDirection: DESC,\n            filterType: ''\n        })\n\n    }, setError)\n\n\n    const editTaskFetch = createFetch(async (id, editData) => {\n        await Task.edit(id, editData)\n        fetchTasks()\n    }, setError)\n\n    const deleteTaskFetch = createFetch(async (id) => {\n        await Task.delete(id)\n        fetchTasks()\n    }, setError)\n\n\n    useEffect(() => {\n        fetchTasks()\n    }, [fetchTasks]);\n\n\n    useEffect(() => {\n        setPaginate(state => ({...state, page: 1}))\n    }, [filter])\n\n    const displayedTasks = useMemo(() => {\n        return tasks.slice((paginate.page - 1) * paginate.limit, (paginate.page - 1) * paginate.limit + paginate.limit)\n    }, [tasks, paginate])\n\n    return (\n        <Grid container alignItems=\"center\" justifyContent=\"center\" className='gridContainer' style={{height: '100vh'}}>\n            <Container maxWidth=\"sm\">\n                <Grid container direction=\"column\">\n                    <Typography variant=\"h4\" component=\"h1\" align=\"center\">ToDo</Typography>\n                    <InputForm setTasks={setTasks} createTaskFetch={createTaskFetch}/>\n                    <Filter setFilter={setFilter}/>\n                    <ToDoList\n                        displayedTasks={displayedTasks}\n                        deleteTaskFetch={deleteTaskFetch}\n                        editTaskFetch={editTaskFetch}\n                        tasks={tasks}\n                        filter={filter}\n                    />\n                    <Pagination\n                        count={Math.ceil(tasks.length / paginate.limit)}\n                        onChange={(e, page) => setPaginate(state => ({...state, page}))}\n                        page={paginate.page}\n                        className='todo-pagination'\n                    />\n                </Grid>\n            </Container>\n        </Grid>\n    );\n};\n\nexport default Tasks;","import React, {useState} from 'react';\nimport {Redirect, Switch, Route} from \"react-router-dom\";\nimport Login from \"../page/Login\";\nimport {login} from \"../services/AuthProvider\";\nimport Registration from \"../page/Registration\";\nimport Tasks from \"../page/Tasks\";\nimport Error from \"./Error\";\n\nconst MyComponent = ({logged}) => {\n\n    const [error, setError] = useState('')\n\n    return (\n        <>\n            {error &&\n            <Error time={10000} setError={setError}>{error}</Error>\n            }\n\n            <Switch>\n                {logged\n                    ? (\n                        <>\n                            <Route path=\"/\">\n                                <Tasks setError={setError}/>\n                            </Route>\n                            <Redirect to=\"/\" />\n                        </>\n                    )\n                    : (\n                        <>\n                            <Route path=\"/login\">\n                                <Login login={login} setError={setError}/>\n                            </Route>\n                            <Route path=\"/registration\">\n                                <Registration login={login} setError={setError}/>\n                            </Route>\n                            <Redirect to=\"/login\" />\n                        </>\n                    )\n                }\n            </Switch>\n\n        </>\n\n\n\n    )\n};\n\nexport default MyComponent;\n","import './App.css';\nimport React from \"react\";\nimport {HashRouter} from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport {useAuth, logout} from './services/AuthProvider'\nimport Routes from \"./components/Routes\";\n\nfunction App() {\n\n    const logged = useAuth();\n\n    return (\n        <HashRouter basename=\"/todo-list\">\n            <Navigation logged={logged} logout={logout}/>\n            <Routes logged={logged}/>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
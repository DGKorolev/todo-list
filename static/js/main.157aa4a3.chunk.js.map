{"version":3,"sources":["components/Filter.js","components/InputForm.js","components/ToDoListItem.js","components/ToDoList.js","services/task.js","components/Error.js","library/library.js","hooks/useFetch.js","App.js","hooks/useSortAndFilteredTasks.js","index.js"],"names":["DONE","UNDONE","Filter","setFilter","handlerFilterButton","filterType","state","handlerSortButton","ascending","sortDirection","Box","mt","Grid","container","justifyContent","alignItems","Button","onClick","Typography","display","IconButton","useStyles","makeStyles","theme","inputForm","padding","spacing","join","marginTop","width","InputForm","createTaskFetch","classes","useState","name","setName","keyDownInputHandler","e","a","code","trim","Input","className","type","placeholder","value","onChange","target","onKeyDown","listItem","borderRadius","border","palette","grey","completed","background","transition","borderColor","success","main","hiddenInput","ToDoListItem","task","editTaskFetch","deleteTaskFetch","setHiddenInput","clickDeleteHandler","stopPropagation","uuid","ListItem","done","size","component","autoFocus","onBlur","defaultValue","createdAt","substr","ToDoList","displayedTasks","List","map","Task","axios","get","res","status","Error","data","taskName","post","taskId","editData","patch","delete","error","textAlign","light","children","setError","time","useEffect","setTimeout","p","getTime","dateStr","Date","useFetch","callback","message","defaults","baseURL","process","App","tasks","setTasks","filter","console","log","page","limit","paginate","setPaginate","fetchTasks","getAll","response","creat","newTask","tasksState","id","edit","editTask","newTaskState","push","item","sortAndFilteredTasks","sortTasks","useMemo","sort","b","useSortAndFilteredTasks","slice","Container","maxWidth","direction","variant","align","Pagination","count","Math","ceil","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.157aa4a3.chunk.js","sourcesContent":["import React from 'react';\nimport {Box, Button, Grid, IconButton, Typography} from \"@material-ui/core\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport const ALL = 'all'\nexport const DONE = 'done'\nexport const UNDONE = 'undone'\n\nconst Filter = ({setFilter}) => {\n\n    const handlerFilterButton = (filterType) => {\n        return () => setFilter(state => ({...state, filterType}))\n    }\n\n    const handlerSortButton = (ascending) => {\n        return () => setFilter(state => ({...state, sortDirection: ascending}))\n    }\n\n    return (\n        <Box mt={2}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" >\n                <Box>\n                    <Button onClick={handlerFilterButton(ALL)}>\n                        All\n                    </Button>\n                    <Button onClick={handlerFilterButton(DONE)}>\n                        Done\n                    </Button>\n                    <Button onClick={handlerFilterButton(UNDONE)}>\n                        Undone\n                    </Button>\n                </Box>\n                <Box>\n                    <Typography display=\"inline\">Sort by Date</Typography>\n                    <IconButton\n                        onClick={handlerSortButton(true)}\n                    >\n                        <ArrowUpwardIcon/>\n                    </IconButton>\n                    <IconButton\n                        onClick={handlerSortButton(false)}\n                    >\n                        <ArrowDownwardIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Filter;","import React, {useState} from 'react';\nimport {Input, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    inputForm: {\n        padding: [theme.spacing(1), theme.spacing(1)].join(' '),\n        marginTop: theme.spacing(2),\n        width: '100%'\n    }\n}))\n\n\nconst InputForm = ({createTaskFetch}) => {\n\n    const classes = useStyles()\n    const [name, setName] = useState('')\n\n    const keyDownInputHandler = async (e) => {\n        if(e.code === \"Enter\" && name.trim()) {\n            await createTaskFetch(name)\n            setName('')\n        }\n    }\n\n    const changeInputHandler = (e) => {\n        setName(e.target.value)\n    }\n\n    return (\n        <>\n            <Input\n                // className={classes.input_form}\n                className={classes.inputForm}\n                type=\"text\"\n                placeholder=\"i want to ...\"\n                value={name}\n                onChange={changeInputHandler}\n                onKeyDown={keyDownInputHandler}\n            />\n\n        </>\n    );\n};\n\nexport default InputForm;","import React, {useState} from 'react';\nimport {Box, Grid, IconButton, Input, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n\n    listItem: {\n        borderRadius: '5px',\n        border: '1px solid' + theme.palette.grey[\"400\"],\n        marginTop: theme.spacing(1)\n    },\n    completed: {\n        background: '#eaffe9',\n        transition: 'all .4s',\n        borderColor: theme.palette.success.main\n    },\n    hiddenInput: {\n        width: \"100px\",\n    }\n\n}))\n\nconst ToDoListItem = ({task, editTaskFetch, deleteTaskFetch}) => {\n\n    let classes = useStyles()\n\n    const [hiddenInput, setHiddenInput] = useState(true)\n\n\n    const clickDeleteHandler = async (e) => {\n        e.stopPropagation()\n        deleteTaskFetch(task.uuid)\n    }\n\n    const inputKeyDownHandler = (e) => {\n\n        if (e.code === \"Enter\") {\n            editTaskFetch(task.uuid, {name: e.target.value})\n            setHiddenInput(true)\n        }\n\n        if (e.code === \"Escape\") {\n            setHiddenInput(true)\n        }\n\n    }\n\n    const clickConfirmHandler = (e) => {\n        e.stopPropagation()\n        editTaskFetch(task.uuid, {done: true})\n    }\n\n    const clickTaskHandler = (e) => {\n        e.stopPropagation()\n        setHiddenInput(false)\n    }\n\n\n    return (\n        <ListItem\n            className={task.done ? [classes.listItem, classes.completed].join(' ') : classes.listItem}\n            onClick={clickTaskHandler}\n        >\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Box>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickConfirmHandler}\n                        className=\"icon-button\"\n                    >\n                        <CheckCircleOutlineIcon/>\n                    </IconButton>\n                    {hiddenInput\n                        ? <Typography component=\"span\">{task.name}</Typography>\n                        : <Input\n                            autoFocus\n                            onBlur={() => setHiddenInput(true)}\n                            onKeyDown={inputKeyDownHandler}\n                            defaultValue={task.name}\n                        />\n                    }\n                </Box>\n\n                <Box>\n                    <Typography component=\"span\">{task.createdAt.substr(0, 10)}</Typography>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickDeleteHandler}\n                        className=\"icon-button\"\n                    >\n                        <DeleteForeverIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </ListItem>\n    );\n};\n\nexport default ToDoListItem;","import React from 'react';\nimport ToDoListItem from \"./ToDoListItem\";\nimport {List} from \"@material-ui/core\";\n\nconst ToDoList = ({displayedTasks, editTaskFetch, deleteTaskFetch}) => {\n\n    return (\n        <List>\n            {displayedTasks.map(task =>\n                <ToDoListItem key={task.uuid} task={task} editTaskFetch={editTaskFetch} deleteTaskFetch={deleteTaskFetch}/>\n            )}\n        </List>\n    );\n};\n\nexport default ToDoList;","import axios from 'axios'\n\nexport default class Task {\n\n    static async getAll() {\n\n        const res = await axios.get('/tasks/2')\n\n        if (res.status !== 200) throw Error('Failed to get the task list')\n\n        return res.data\n\n    }\n\n    static async creat(taskName) {\n\n        const res = await axios.post('/task/2', {\n            name: taskName,\n            done: false\n        })\n\n        if (res.status !== 200) throw Error('Task not created')\n\n        return res.data\n    }\n\n    static async edit(taskId, editData) {\n\n        const res = await axios.patch(`/task/2/${taskId}`, editData)\n\n        if (res.status !== 200) throw Error('Data change error')\n\n        return res.data\n    }\n\n    static async delete(taskId) {\n\n        const res = await axios.delete(`/task/2/${taskId}`)\n\n        if (res.status !== 204) throw Error('Data deletion error')\n\n        return res.data\n\n    }\n\n}","import React, {useEffect} from 'react';\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        display: 'block',\n        textAlign: \"center\",\n        background: theme.palette.error.light,\n        borderRadius: '5px',\n        padding: '8px 24px',\n    }\n}))\n\nconst Error = ({children, setError, time}) => {\n\n    const classes = useStyles()\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setError('')\n        }, time)\n\n    }, )\n\n    return (\n        <Box p={1}>\n            <Typography component={'span'} className={classes.error}>{children}</Typography>\n        </Box>\n    );\n};\n\nexport default Error;","export const getTime = (dateStr) => {\n    return new Date(dateStr).getTime()\n}","export const useFetch = (callback, setError) => {\n\n    return async (...ars) => {\n\n        try {\n            return await callback(...ars)\n\n        }catch (e){\n            setError(e.message)\n        }\n\n    }\n\n}","import './App.css';\nimport Filter, {ALL} from \"./components/Filter\";\nimport InputForm from \"./components/InputForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {Container, Grid, Typography} from '@material-ui/core'\nimport Pagination from '@material-ui/lab/Pagination';\nimport Task from \"./services/task\";\nimport Error from \"./components/Error\";\nimport {useSortAndFilteredTasks} from \"./hooks/useSortAndFilteredTasks\";\nimport {useFetch} from \"./hooks/useFetch\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_ADDRESS;\n\nfunction App() {\n\n\n    const [error, setError] = useState('')\n\n    const [tasks, setTasks] = useState([])\n\n    const [filter, setFilter] = useState({\n        sortDirection: true,\n        filterType: ALL,\n    })\n\n    console.log(tasks)\n\n\n    const [paginate, setPaginate] = useState({\n        page: 1,\n        limit: 5\n    })\n\n    const fetchTasks = useFetch(async () => {\n        const response = await Task.getAll()\n        setTasks(response)\n    }, setError)\n\n    const createTaskFetch = useFetch(async (name) => {\n        const newTask = await Task.creat(name)\n        setTasks((tasksState) => [...tasksState, newTask])\n    }, setError)\n\n    const editTaskFetch = useFetch(async (id, editData) => {\n\n        const editTask = await Task.edit(id, editData)\n\n        setTasks(tasksState => {\n\n            const newTaskState = tasksState.filter(task => task.uuid !== id)\n            newTaskState.push(editTask)\n            return newTaskState\n\n        })\n\n\n    }, setError)\n\n    const deleteTaskFetch = useFetch(async (id) => {\n        await Task.delete(id)\n        setTasks(state => [...state].filter(item => item.uuid !== id))\n    }, setError)\n\n\n    useEffect(() => {\n        fetchTasks()\n    }, [fetchTasks])\n\n\n    const sortAndFilteredTasks = useSortAndFilteredTasks(tasks, filter)\n\n\n    useEffect(() => {\n        setPaginate(state => ({...state, page: 1}))\n    }, [filter])\n\n    const displayedTasks = useMemo(() => {\n        return sortAndFilteredTasks.slice((paginate.page - 1) * paginate.limit, (paginate.page - 1) * paginate.limit + paginate.limit)\n    }, [sortAndFilteredTasks, paginate])\n\n\n    return (\n        <div className=\"App\">\n            <Grid container alignItems=\"center\" justifyContent=\"center\" className='gridContainer'>\n                <Container maxWidth=\"sm\">\n                    <Grid container direction=\"column\">\n\n                        {error &&\n                            <Error time={2000} setError={setError}>{error}</Error>\n                        }\n                        <Typography variant=\"h4\" component=\"h1\" align=\"center\">ToDo</Typography>\n                        <InputForm setTasks={setTasks} createTaskFetch={createTaskFetch}/>\n                        <Filter setFilter={setFilter}/>\n                        <ToDoList displayedTasks={displayedTasks} deleteTaskFetch={deleteTaskFetch} editTaskFetch={editTaskFetch}/>\n                        <Pagination\n                            count={Math.ceil(sortAndFilteredTasks.length / paginate.limit)}\n                            onChange={(e, page) => setPaginate(state => ({...state, page}))}\n                            page={paginate.page}\n                            className='todo-pagination'\n                        />\n                    </Grid>\n                </Container>\n            </Grid>\n        </div>\n    );\n}\n\nexport default App;\n","import {useMemo} from \"react\";\nimport {DONE, UNDONE} from \"../components/Filter\";\nimport {getTime} from \"../library/library\";\n\nexport const useSortAndFilteredTasks = (tasks, filter) => {\n\n    const sortTasks = useMemo(() => {\n\n        return [...tasks].sort((a, b) => (\n                filter.sortDirection\n                    ? getTime(b.createdAt) - getTime(a.createdAt)\n                    : getTime(a.createdAt) - getTime(b.createdAt)\n            )\n        )\n\n    }, [tasks, filter.sortDirection])\n\n\n    return useMemo(() => {\n\n        switch (filter.filterType) {\n            case DONE:\n                return sortTasks.filter(item => item.done)\n\n            case UNDONE:\n                return sortTasks.filter(item => !item.done)\n\n            default: //ALL\n                return sortTasks\n        }\n\n    }, [sortTasks, filter.filterType])\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
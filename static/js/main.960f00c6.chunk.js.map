{"version":3,"sources":["components/Filter.js","components/InputForm.js","components/ToDoListItem.js","components/ToDoList.js","library/library.js","services/tasks.js","App.js","index.js"],"names":["Filter","setFilter","handlerFilterButton","filterType","state","handlerSortButton","ascending","sortDirection","Box","mt","Grid","container","justifyContent","alignItems","Button","onClick","ALL","size","DONE","UNDONE","Typography","display","IconButton","useStyles","makeStyles","theme","inputForm","padding","spacing","join","marginTop","width","InputForm","addItem","classes","useState","value","setValue","Input","className","type","placeholder","onChange","e","target","onKeyDown","code","newToDoListItem","id","Date","now","date","toLocaleDateString","replace","toDoListState","listItem","borderRadius","border","palette","grey","completed","background","transition","borderColor","success","main","hiddenInput","ToDoListItem","toDoListItem","setToDoListItems","setHiddenInput","ListItem","done","stopPropagation","newState","find","item","uuid","component","name","autoFocus","onBlur","elemIndex","findIndex","updatedAt","toISOString","defaultValue","substr","filter","ToDoList","showToDoListItems","List","map","getTime","dateStr","Tasks","getAll","a","axios","get","res","data","App","toDoListItems","page","limit","paginate","setPaginate","filteredAndSortedToDoListItems","setFilteredAndSortedToDoListItems","useEffect","response","fetchData","sort","b","useMemo","slice","Container","maxWidth","direction","variant","align","Pagination","count","Math","ceil","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.960f00c6.chunk.js","sourcesContent":["import React from 'react';\nimport {ALL, DONE, UNDONE} from \"../App\";\nimport {Box, Button, Grid, IconButton, Typography} from \"@material-ui/core\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nconst Filter = ({setFilter}) => {\n\n    const handlerFilterButton = (filterType) => {\n        return () => setFilter(state => ({...state, filterType}))\n    }\n\n    const handlerSortButton = (ascending) => {\n        return () => setFilter(state => ({...state, sortDirection: ascending}))\n    }\n\n    return (\n        <Box mt={2}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" >\n                <Box>\n                    <Button onClick={handlerFilterButton(ALL)} size=\"small\">\n                        All\n                    </Button>\n                    <Button onClick={handlerFilterButton(DONE)}>\n                        Done\n                    </Button>\n                    <Button onClick={handlerFilterButton(UNDONE)}>\n                        Undone\n                    </Button>\n                </Box>\n                <Box>\n                    <Typography display=\"inline\">Sort by Date</Typography>\n                    <IconButton\n                        onClick={handlerSortButton(true)}\n                    >\n                        <ArrowUpwardIcon/>\n                    </IconButton>\n                    <IconButton\n                        onClick={handlerSortButton(false)}\n                    >\n                        <ArrowDownwardIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Filter;","import React, {useState} from 'react';\nimport {Input, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    inputForm: {\n        padding: [theme.spacing(1), theme.spacing(1)].join(' '),\n        marginTop: theme.spacing(2),\n        width: '100%'\n    }\n}))\n\n\nconst InputForm = ({addItem}) => {\n\n    const classes = useStyles()\n    const [value, setValue] = useState('')\n\n    const keyDownInputHandler = (e) => {\n        if (e.code !== \"Enter\") return\n\n        const newToDoListItem = {\n            id: Date.now(),\n            value,\n            date: new Date().toLocaleDateString().replace(/\\./g,'/')\n        }\n\n        addItem((toDoListState) => [...toDoListState, newToDoListItem])\n        setValue('')\n    }\n\n    const changeInputHandler = (e) => {\n        setValue(e.target.value)\n    }\n\n\n    return (\n        <Input\n            // className={classes.input_form}\n            className={classes.inputForm}\n            type=\"text\"\n            placeholder=\"i want to ...\"\n            value={value}\n            onChange={changeInputHandler}\n            onKeyDown={keyDownInputHandler}\n        />\n    );\n};\n\nexport default InputForm;","import React, {useState} from 'react';\nimport {Box, Grid, IconButton, Input, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n\n    listItem: {\n        borderRadius: '5px',\n        border: '1px solid' + theme.palette.grey[\"400\"],\n        marginTop: theme.spacing(1)\n    },\n    completed: {\n        background: '#eaffe9',\n        transition: 'all .4s',\n        borderColor: theme.palette.success.main\n    },\n    hiddenInput : {\n        width: \"100px\",\n    }\n\n}))\n\nconst ToDoListItem = ({toDoListItem, setToDoListItems}) => {\n\n    let classes = useStyles()\n\n    const [hiddenInput, setHiddenInput] = useState(true)\n\n    const deleteItem = (e) => {\n        e.stopPropagation()\n        setToDoListItems(state => [...state].filter(item => item.uuid !== toDoListItem.uuid))\n    }\n\n    const markCompleted = (e) => {\n        e.stopPropagation()\n        setToDoListItems(state => {\n            const newState = [...state]\n            newState.find(item => item.uuid === toDoListItem.uuid).done = true\n            return [...newState]\n        })\n    }\n\n    const editModeToDoItem = (e) => {\n        e.stopPropagation()\n        setHiddenInput(false)\n    }\n\n    const handlerInputConfirm = (e) => {\n        if (e.code === \"Enter\") {\n\n            setToDoListItems(state => {\n\n                const newState  = [...state]\n\n                let elemIndex = newState.findIndex(item => item.uuid === toDoListItem.uuid)\n\n                newState[elemIndex] = {\n                    ...newState[elemIndex],\n                    name: e.target.value,\n                    updatedAt: new Date().toISOString()\n                }\n\n                return [...newState]\n\n            })\n\n            setHiddenInput(true)\n        }\n\n        if (e.code === \"Escape\") {\n            setHiddenInput(true)\n        }\n\n    }\n\n\n    return (\n        <ListItem\n            className={toDoListItem.done ? [classes.listItem, classes.completed].join(' ') : classes.listItem}\n            onClick={editModeToDoItem}\n        >\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Box>\n                    <IconButton\n                        size=\"small\"\n                        onClick={markCompleted}\n                        className=\"icon-button\"\n                    >\n                        <CheckCircleOutlineIcon/>\n                    </IconButton>\n                    {hiddenInput\n                        ? <Typography component=\"span\">{toDoListItem.name}</Typography>\n                        : <Input\n                            autoFocus\n                            onBlur={() => setHiddenInput(true)}\n                            onKeyDown={handlerInputConfirm}\n                            defaultValue={toDoListItem.name}\n                        />\n                    }\n                </Box>\n\n                <Box>\n                    <Typography component=\"span\">{toDoListItem.updatedAt.substr(0, 10)}</Typography>\n                    <IconButton\n                        size=\"small\"\n                        onClick={deleteItem}\n                        className=\"icon-button\"\n                    >\n                        <DeleteForeverIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </ListItem>\n    );\n};\n\nexport default ToDoListItem;","import React from 'react';\nimport ToDoListItem from \"./ToDoListItem\";\nimport {List} from \"@material-ui/core\";\n\nconst ToDoList = ({showToDoListItems, setToDoListItems}) => {\n\n    return (\n        <List>\n            {showToDoListItems.map(toDoListItem =>\n                <ToDoListItem key={toDoListItem.uuid} toDoListItem={toDoListItem} setToDoListItems={setToDoListItems} />\n            )}\n        </List>\n    );\n};\n\nexport default ToDoList;","export const getTime = (dateStr) => {\n    return new Date(dateStr).getTime()\n}","import axios from 'axios'\n\nexport default class Tasks {\n\n    static getAll = async () => {\n        const res = await axios.get('https://todo-api-learning.herokuapp.com/v1/tasks/4')\n        return res.data\n    }\n\n}","import './App.css';\nimport Filter from \"./components/Filter\";\nimport InputForm from \"./components/InputForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {getTime} from \"./library/library\";\nimport {Container, Grid, Typography} from '@material-ui/core'\nimport Pagination from '@material-ui/lab/Pagination';\nimport Tasks from \"./services/tasks\";\n\n\nexport const ALL = 'all'\nexport const DONE = 'done'\nexport const UNDONE = 'undone'\n\n\nfunction App() {\n\n\n    const [toDoListItems, setToDoListItems] = useState([])\n\n    const [filter, setFilter] = useState({\n        sortDirection: true,\n        filterType: ALL,\n    })\n\n    const [paginate, setPaginate] = useState({\n        page: 1,\n        limit: 5\n    })\n\n    const [filteredAndSortedToDoListItems, setFilteredAndSortedToDoListItems] = useState([])\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n            const response = await Tasks.getAll()\n            setToDoListItems(response)\n        }\n\n        fetchData()\n\n    }, [])\n\n    useEffect(() => {\n\n        setToDoListItems(state => (\n            [...state].sort((a, b) => (\n                    filter.sortDirection\n                        ? getTime(b.updatedAt) - getTime(a.updatedAt)\n                        : getTime(a.updatedAt) - getTime(b.updatedAt)\n                )\n            )\n        ))\n\n    }, [filter.sortDirection])\n\n    useEffect(() => {\n\n        switch (filter.filterType) {\n            case DONE:\n                setFilteredAndSortedToDoListItems([...toDoListItems.filter(item => item.done)])\n                break\n            case UNDONE:\n                setFilteredAndSortedToDoListItems([...toDoListItems.filter(item => !item.done)])\n                break\n            default: //ALL\n                setFilteredAndSortedToDoListItems([...toDoListItems])\n                break\n        }\n\n    }, [toDoListItems, filter])\n\n    useEffect(() => {\n        setPaginate(state => ({...state, page: 1}))\n    }, [filter.filterType])\n\n\n    const showToDoListItems = useMemo(() => {\n        return filteredAndSortedToDoListItems.slice((paginate.page - 1) * paginate.limit, (paginate.page - 1) * paginate.limit + paginate.limit)\n    }, [filteredAndSortedToDoListItems, paginate.page])\n\n\n    return (\n        <div className=\"App\">\n            <Container maxWidth=\"sm\">\n                <Grid container direction=\"column\">\n                    <Typography variant=\"h4\" component=\"h1\" align=\"center\">ToDo</Typography>\n                    <InputForm addItem={setToDoListItems}/>\n\n                    <Filter setFilter={setFilter}/>\n                    <ToDoList showToDoListItems={showToDoListItems} setToDoListItems={setToDoListItems}/>\n                    <Pagination\n                        count={Math.ceil(filteredAndSortedToDoListItems.length / paginate.limit)}\n                        onChange={(e, page) => setPaginate(state => ({...state, page}))}\n                        page={paginate.page}\n                        className='todo-pagination'\n                    />\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
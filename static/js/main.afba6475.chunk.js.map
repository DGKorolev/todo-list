{"version":3,"sources":["components/Filter.js","library/library.js","services/task.js","hooks/useFetch.js","components/InputForm.js","components/ToDoListItem.js","components/ToDoList.js","components/Error.js","App.js","hooks/useSortAndFilteredTasks.js","index.js"],"names":["Filter","setFilter","handlerFilterButton","filterType","state","handlerSortButton","ascending","sortDirection","Box","mt","Grid","container","justifyContent","alignItems","Button","onClick","ALL","DONE","UNDONE","Typography","display","IconButton","getTime","dateStr","Date","getApiAddress","resource","process","join","Task","axios","get","res","data","taskName","post","name","taskId","editProp","patch","delete","useFetch","callback","setError","a","message","useStyles","makeStyles","theme","inputForm","padding","spacing","marginTop","width","InputForm","setTasks","classes","useState","setName","createTask","creat","newToDo","toDoListState","Input","className","type","placeholder","value","onChange","e","target","onKeyDown","code","trim","listItem","borderRadius","border","palette","grey","completed","background","transition","borderColor","success","main","hiddenInput","ToDoListItem","task","setHiddenInput","deleteFetch","id","uuid","filter","item","clickDeleteHandler","stopPropagation","editFetch","editData","edit","editTask","map","ListItem","done","size","component","autoFocus","onBlur","defaultValue","createdAt","substr","ToDoList","displayedTasks","List","error","textAlign","light","Error","children","time","useEffect","setTimeout","p","App","tasks","page","limit","paginate","setPaginate","fetchTasks","getAll","response","sortAndFilteredTasks","sortTasks","useMemo","sort","b","useSortAndFilteredTasks","slice","Container","maxWidth","direction","variant","align","Pagination","count","Math","ceil","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afba6475.chunk.js","sourcesContent":["import React from 'react';\nimport {ALL, DONE, UNDONE} from \"../App\";\nimport {Box, Button, Grid, IconButton, Typography} from \"@material-ui/core\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nconst Filter = ({setFilter}) => {\n\n    const handlerFilterButton = (filterType) => {\n        return () => setFilter(state => ({...state, filterType}))\n    }\n\n    const handlerSortButton = (ascending) => {\n        return () => setFilter(state => ({...state, sortDirection: ascending}))\n    }\n\n    return (\n        <Box mt={2}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" >\n                <Box>\n                    <Button onClick={handlerFilterButton(ALL)}>\n                        All\n                    </Button>\n                    <Button onClick={handlerFilterButton(DONE)}>\n                        Done\n                    </Button>\n                    <Button onClick={handlerFilterButton(UNDONE)}>\n                        Undone\n                    </Button>\n                </Box>\n                <Box>\n                    <Typography display=\"inline\">Sort by Date</Typography>\n                    <IconButton\n                        onClick={handlerSortButton(true)}\n                    >\n                        <ArrowUpwardIcon/>\n                    </IconButton>\n                    <IconButton\n                        onClick={handlerSortButton(false)}\n                    >\n                        <ArrowDownwardIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Filter;","export const getTime = (dateStr) => {\n    return new Date(dateStr).getTime()\n}\n\nexport const getApiAddress = (resource) => {\n    return [process.env.REACT_APP_API_ADDRESS, resource].join('')\n}\n\n// export const isString() =","import axios from 'axios'\nimport {getApiAddress} from \"../library/library\";\n\nexport default class Task {\n\n    static async getAll() {\n        const res = await axios.get(getApiAddress('/tasks/2'))\n        return res.data\n    }\n\n    static async creat(taskName) {\n\n            const res = await axios.post(getApiAddress('/task/2'), {\n                name: taskName,\n            })\n\n            return res.data\n    }\n\n    static async edit(taskId, editProp) {\n\n        const resource = `/task/2/${taskId}`\n\n        const res = await axios.patch(getApiAddress(resource), editProp)\n\n        return res.data\n    }\n\n    static async delete(taskId) {\n\n        const resource = `/task/2/${taskId}`\n\n        const res = await axios.delete(getApiAddress(resource))\n\n        return res.data\n    }\n\n}","export const useFetch = (callback, setError) => {\n\n    return async (...ars) => {\n\n        try {\n            return await callback(...ars)\n\n        }catch (e){\n            setError(e.message)\n        }\n\n    }\n\n}","import React, {useState} from 'react';\nimport {Input, makeStyles} from '@material-ui/core'\nimport Task from \"../services/task\";\nimport {useFetch} from \"../hooks/useFetch\";\n\nconst useStyles = makeStyles((theme) => ({\n    inputForm: {\n        padding: [theme.spacing(1), theme.spacing(1)].join(' '),\n        marginTop: theme.spacing(2),\n        width: '100%'\n    }\n}))\n\n\nconst InputForm = ({setTasks, setError}) => {\n\n    const classes = useStyles()\n    const [name, setName] = useState('')\n\n    const createTask = useFetch(async (name) => {\n        const newToDo = await Task.creat(name)\n        setTasks((toDoListState) => [...toDoListState, newToDo])\n        setName('')\n    }, setError)\n\n    const keyDownInputHandler = (e) => {\n        if(e.code === \"Enter\" && name.trim()) createTask(name)\n    }\n\n    const changeInputHandler = (e) => {\n        setName(e.target.value)\n    }\n\n    return (\n        <>\n            <Input\n                // className={classes.input_form}\n                className={classes.inputForm}\n                type=\"text\"\n                placeholder=\"i want to ...\"\n                value={name}\n                onChange={changeInputHandler}\n                onKeyDown={keyDownInputHandler}\n            />\n\n        </>\n    );\n};\n\nexport default InputForm;","import React, {useState} from 'react';\nimport {Box, Grid, IconButton, Input, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Task from \"../services/task\";\nimport {useFetch} from \"../hooks/useFetch\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    listItem: {\n        borderRadius: '5px',\n        border: '1px solid' + theme.palette.grey[\"400\"],\n        marginTop: theme.spacing(1)\n    },\n    completed: {\n        background: '#eaffe9',\n        transition: 'all .4s',\n        borderColor: theme.palette.success.main\n    },\n    hiddenInput: {\n        width: \"100px\",\n    }\n\n}))\n\nconst ToDoListItem = ({task, setTasks, setError}) => {\n\n    let classes = useStyles()\n\n    const [hiddenInput, setHiddenInput] = useState(true)\n\n\n    const deleteFetch = useFetch(async (id) => {\n        await Task.delete(task.uuid)\n        setTasks(state => [...state].filter(item => item.uuid !== id))\n    }, setError)\n\n\n    const clickDeleteHandler = async (e) => {\n        e.stopPropagation()\n        deleteFetch(task.uuid)\n    }\n\n\n    const editFetch = useFetch(async (id, editData) => {\n\n        const editTask = await Task.edit(id, editData)\n\n        setTasks(state => ([...state].map(item => {\n                if (item.uuid === task.uuid) return editTask\n                return item\n            })\n        ))\n\n    }, setError)\n\n    const inputKeyDownHandler = (e) => {\n\n        if (e.code === \"Enter\") {\n            editFetch(task.uuid, {name: e.target.value})\n            setHiddenInput(true)\n        }\n\n        if (e.code === \"Escape\") {\n            setHiddenInput(true)\n        }\n\n    }\n\n    const clickConfirmHandler = (e) => {\n        e.stopPropagation()\n        editFetch(task.uuid, {done: true})\n    }\n\n    const clickTaskHandler = (e) => {\n        e.stopPropagation()\n        setHiddenInput(false)\n    }\n\n\n    return (\n        <ListItem\n            className={task.done ? [classes.listItem, classes.completed].join(' ') : classes.listItem}\n            onClick={clickTaskHandler}\n        >\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                <Box>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickConfirmHandler}\n                        className=\"icon-button\"\n                    >\n                        <CheckCircleOutlineIcon/>\n                    </IconButton>\n                    {hiddenInput\n                        ? <Typography component=\"span\">{task.name}</Typography>\n                        : <Input\n                            autoFocus\n                            onBlur={() => setHiddenInput(true)}\n                            onKeyDown={inputKeyDownHandler}\n                            defaultValue={task.name}\n                        />\n                    }\n                </Box>\n\n                <Box>\n                    <Typography component=\"span\">{task.createdAt.substr(0, 10)}</Typography>\n                    <IconButton\n                        size=\"small\"\n                        onClick={clickDeleteHandler}\n                        className=\"icon-button\"\n                    >\n                        <DeleteForeverIcon/>\n                    </IconButton>\n                </Box>\n            </Grid>\n        </ListItem>\n    );\n};\n\nexport default ToDoListItem;","import React from 'react';\nimport ToDoListItem from \"./ToDoListItem\";\nimport {List} from \"@material-ui/core\";\n\nconst ToDoList = ({displayedTasks, setTasks, setError}) => {\n\n    return (\n        <List>\n            {displayedTasks.map(task =>\n                <ToDoListItem key={task.uuid} task={task} setTasks={setTasks} setError={setError}/>\n            )}\n        </List>\n    );\n};\n\nexport default ToDoList;","import React, {useEffect} from 'react';\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        display: 'block',\n        textAlign: \"center\",\n        background: theme.palette.error.light,\n        borderRadius: '5px',\n        padding: '8px 24px',\n    }\n}))\n\nconst Error = ({children, setError, time}) => {\n\n    const classes = useStyles()\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setError('')\n        }, time)\n\n    }, )\n\n    return (\n        <Box p={1}>\n            <Typography component={'span'} className={classes.error}>{children}</Typography>\n        </Box>\n    );\n};\n\nexport default Error;","import './App.css';\nimport Filter from \"./components/Filter\";\nimport InputForm from \"./components/InputForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {Container, Grid, Typography} from '@material-ui/core'\nimport Pagination from '@material-ui/lab/Pagination';\nimport Task from \"./services/task\";\nimport Error from \"./components/Error\";\nimport {useSortAndFilteredTasks} from \"./hooks/useSortAndFilteredTasks\";\nimport {useFetch} from \"./hooks/useFetch\";\n\n\nexport const ALL = 'all'\nexport const DONE = 'done'\nexport const UNDONE = 'undone'\n\n\nfunction App() {\n\n    const [error, setError] = useState('')\n\n    const [tasks, setTasks] = useState([])\n\n    const [filter, setFilter] = useState({\n        sortDirection: true,\n        filterType: ALL,\n    })\n\n    const [paginate, setPaginate] = useState({\n        page: 1,\n        limit: 5\n    })\n\n    const fetchTasks = useFetch(async () => {\n        const response = await Task.getAll()\n        setTasks(response)\n    }, setError)\n\n    useEffect(() => {\n        fetchTasks()\n    }, [])\n\n    const sortAndFilteredTasks = useSortAndFilteredTasks(tasks, filter)\n\n\n    useEffect(() => {\n        setPaginate(state => ({...state, page: 1}))\n    }, [filter])\n\n    const displayedTasks = useMemo(() => {\n        return sortAndFilteredTasks.slice((paginate.page - 1) * paginate.limit, (paginate.page - 1) * paginate.limit + paginate.limit)\n    }, [sortAndFilteredTasks, paginate])\n\n\n    return (\n        <div className=\"App\">\n            <Grid container alignItems=\"center\" justifyContent=\"center\" className='gridContainer'>\n                <Container maxWidth=\"sm\">\n                    <Grid container direction=\"column\">\n\n                        {error &&\n                            <Error time={2000} setError={setError}>{error}</Error>\n                        }\n                        <Typography variant=\"h4\" component=\"h1\" align=\"center\">ToDo</Typography>\n                        <InputForm setTasks={setTasks} setError={setError}/>\n                        <Filter setFilter={setFilter}/>\n                        <ToDoList displayedTasks={displayedTasks} setTasks={setTasks} setError={setError}/>\n                        <Pagination\n                            count={Math.ceil(sortAndFilteredTasks.length / paginate.limit)}\n                            onChange={(e, page) => setPaginate(state => ({...state, page}))}\n                            page={paginate.page}\n                            className='todo-pagination'\n                        />\n                    </Grid>\n                </Container>\n            </Grid>\n        </div>\n    );\n}\n\nexport default App;\n","import {useMemo} from \"react\";\nimport {DONE, UNDONE} from \"../App\";\nimport {getTime} from \"../library/library\";\n\nexport const useSortAndFilteredTasks = (tasks, filter) => {\n\n    const sortTasks = useMemo(() => {\n\n        return [...tasks].sort((a, b) => (\n                filter.sortDirection\n                    ? getTime(b.createdAt) - getTime(a.createdAt)\n                    : getTime(a.createdAt) - getTime(b.createdAt)\n            )\n        )\n\n    }, [tasks, filter.sortDirection])\n\n\n    return useMemo(() => {\n\n        switch (filter.filterType) {\n            case DONE:\n                return sortTasks.filter(item => item.done)\n\n            case UNDONE:\n                return sortTasks.filter(item => !item.done)\n\n            default: //ALL\n                return sortTasks\n        }\n\n    }, [sortTasks, filter.filterType])\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}